var _=class{};_.LIST={path:"/mf1/cashiers",method:"GET",operationId:"read_cashiers_mf1_cashiers_get",summary:"Read Cashiers",description:"Get a paginated list of cashiers",tags:["Cashier"],security:[{"E-Receipt_IT_API_OAuth2PasswordBearer":[]}],parameters:{query:{page:"integer",size:"integer"}},responses:{200:{description:"Successful Response",contentType:"application/json",schema:"E-Receipt_IT_API_Page__T_Customized_CashierOutput_"},403:{description:"Forbidden",contentType:"application/json",schema:"E-Receipt_IT_API_ErrorModel403Forbidden"},404:{description:"Not Found",contentType:"application/json",schema:"E-Receipt_IT_API_ErrorModel404NotFound"},422:{description:"Validation Error",contentType:"application/json",schema:"E-Receipt_IT_API_HTTPValidationError"}},metadata:{resource:"cashiers",operation:"list",authRequired:true,retryable:true}},_.CREATE={path:"/mf1/cashiers",method:"POST",operationId:"create_cashier_mf1_cashiers_post",summary:"Create Cashier",description:"Create a new cashier account",tags:["Cashier"],security:[{"E-Receipt_IT_API_OAuth2PasswordBearer":[]}],requestBody:{required:true,contentType:"application/json",schema:"E-Receipt_IT_API_CashierCreateInput"},responses:{201:{description:"Successful Response",contentType:"application/json",schema:"E-Receipt_IT_API_CashierOutput"},403:{description:"Forbidden",contentType:"application/json",schema:"E-Receipt_IT_API_ErrorModel403Forbidden"},422:{description:"Validation Error",contentType:"application/json",schema:"E-Receipt_IT_API_HTTPValidationError"}},metadata:{resource:"cashiers",operation:"create",authRequired:true,retryable:false}},_.ME={path:"/mf1/cashiers/me",method:"GET",operationId:"read_cashier_me_mf1_cashiers_me_get",summary:"Read Cashier Me",description:"Read currently authenticated cashier's information",tags:["Cashier"],security:[{"E-Receipt_IT_API_OAuth2PasswordBearer":[]}],responses:{200:{description:"Successful Response",contentType:"application/json",schema:"E-Receipt_IT_API_CashierOutput"},403:{description:"Forbidden",contentType:"application/json",schema:"E-Receipt_IT_API_ErrorModel403Forbidden"},404:{description:"Not Found",contentType:"application/json",schema:"E-Receipt_IT_API_ErrorModel404NotFound"}},metadata:{resource:"cashiers",operation:"me",authRequired:true,retryable:true}},_.GET_BY_ID={path:"/mf1/cashiers/{cashier_id}",method:"GET",operationId:"read_cashier_by_id_mf1_cashiers__cashier_id__get",summary:"Read Cashier By Id",description:"Get a specific user by id",tags:["Cashier"],security:[{"E-Receipt_IT_API_OAuth2PasswordBearer":[]}],parameters:{path:{cashier_id:"integer"}},responses:{200:{description:"Successful Response",contentType:"application/json",schema:"E-Receipt_IT_API_CashierOutput"},403:{description:"Forbidden",contentType:"application/json",schema:"E-Receipt_IT_API_ErrorModel403Forbidden"},404:{description:"Not Found",contentType:"application/json",schema:"E-Receipt_IT_API_ErrorModel404NotFound"},422:{description:"Validation Error",contentType:"application/json",schema:"E-Receipt_IT_API_HTTPValidationError"}},metadata:{resource:"cashiers",operation:"get",authRequired:true,retryable:true}},_.DELETE={path:"/mf1/cashiers/{cashier_id}",method:"DELETE",operationId:"delete_cashier_mf1_cashiers__cashier_id__delete",summary:"Delete Cashier",description:"Delete a cashier",tags:["Cashier"],security:[{"E-Receipt_IT_API_OAuth2PasswordBearer":[]}],parameters:{path:{cashier_id:"integer"}},responses:{204:{description:"Successful Response"},403:{description:"Forbidden",contentType:"application/json",schema:"E-Receipt_IT_API_ErrorModel403Forbidden"},404:{description:"Not Found",contentType:"application/json",schema:"E-Receipt_IT_API_ErrorModel404NotFound"},422:{description:"Validation Error",contentType:"application/json",schema:"E-Receipt_IT_API_HTTPValidationError"}},metadata:{resource:"cashiers",operation:"delete",authRequired:true,retryable:false}};var u=class{};u.LIST={path:"/mf1/point-of-sales",method:"GET",operationId:"read_point_of_sales_mf1_point_of_sales_get",summary:"Read Point Of Sales",description:"Retrieve PEMs",tags:["Point of Sale"],security:[{"E-Receipt_IT_API_OAuth2PasswordBearer":[]}],responses:{200:{description:"Successful Response",contentType:"application/json",schema:"E-Receipt_IT_API_Page__T_Customized_PointOfSaleOutput_"},403:{description:"Forbidden",contentType:"application/json",schema:"E-Receipt_IT_API_ErrorModel403Forbidden"}},metadata:{resource:"point-of-sales",operation:"list",authRequired:true,retryable:true}},u.GET_BY_SERIAL={path:"/mf1/point-of-sales/{serial_number}",method:"GET",operationId:"read_point_of_sale_mf1_point_of_sales__serial_number__get",summary:"Read Point Of Sale",description:"Get a specific Point of Sale by serial number",tags:["Point of Sale"],security:[{"E-Receipt_IT_API_OAuth2PasswordBearer":[]}],parameters:{path:{serial_number:"string"}},responses:{200:{description:"Successful Response",contentType:"application/json",schema:"E-Receipt_IT_API_PointOfSaleOutput"},403:{description:"Forbidden",contentType:"application/json",schema:"E-Receipt_IT_API_ErrorModel403Forbidden"},404:{description:"Not Found",contentType:"application/json",schema:"E-Receipt_IT_API_ErrorModel404NotFound"}},metadata:{resource:"point-of-sales",operation:"get",authRequired:true,retryable:true}},u.CLOSE_JOURNAL={path:"/mf1/point-of-sales/close",method:"POST",operationId:"close_journal_mf1_point_of_sales_close_post",summary:"Close Journal",description:"Close the daily journal for Point of Sales",tags:["Point of Sale"],security:[{"E-Receipt_IT_API_OAuth2PasswordBearer":[]}],requestBody:{required:true,contentType:"application/json",schema:"E-Receipt_IT_API_CloseJournalRequest"},responses:{200:{description:"Successful Response",contentType:"application/json",schema:"E-Receipt_IT_API_CloseJournalOutput"},403:{description:"Forbidden",contentType:"application/json",schema:"E-Receipt_IT_API_ErrorModel403Forbidden"}},metadata:{resource:"point-of-sales",operation:"close_journal",authRequired:true,retryable:false}},u.ACTIVATION={path:"/mf1/point-of-sales/{serial_number}/activation",method:"POST",operationId:"post_activation_mf1_point_of_sales__serial_number__activation_post",summary:"Post Activation",description:"Trigger the activation process of a Point of Sale by requesting a certificate to the Italian Tax Agency",tags:["Point of Sale"],security:[{"E-Receipt_IT_API_OAuth2PasswordBearer":[]}],parameters:{path:{serial_number:"string"}},requestBody:{required:true,contentType:"application/json",schema:"E-Receipt_IT_API_ActivationRequest"},responses:{200:{description:"Successful Response",contentType:"application/json",schema:"E-Receipt_IT_API_ActivationOutput"},403:{description:"Forbidden",contentType:"application/json",schema:"E-Receipt_IT_API_ErrorModel403Forbidden"}},metadata:{resource:"point-of-sales",operation:"activation",authRequired:true,retryable:false}},u.CREATE_INACTIVITY={path:"/mf1/point-of-sales/{serial_number}/inactivity",method:"POST",operationId:"create_inactivity_period_mf1_point_of_sales__serial_number__inactivity_post",summary:"Create Inactivity Period",description:"Create a new inactivity period",tags:["Point of Sale"],security:[{"E-Receipt_IT_API_OAuth2PasswordBearer":[]}],parameters:{path:{serial_number:"string"}},requestBody:{required:true,contentType:"application/json",schema:"E-Receipt_IT_API_InactivityRequest"},responses:{200:{description:"Successful Response",contentType:"application/json"},403:{description:"Forbidden",contentType:"application/json",schema:"E-Receipt_IT_API_ErrorModel403Forbidden"}},metadata:{resource:"point-of-sales",operation:"create_inactivity",authRequired:true,retryable:false}},u.SET_OFFLINE={path:"/mf1/point-of-sales/{serial_number}/status/offline",method:"POST",operationId:"post_offline_mf1_point_of_sales__serial_number__status_offline_post",summary:"Post Offline",description:"Change the state of the Point of Sale to 'offline'",tags:["Point of Sale"],security:[{"E-Receipt_IT_API_OAuth2PasswordBearer":[]}],parameters:{path:{serial_number:"string"}},responses:{200:{description:"Successful Response",contentType:"application/json"},403:{description:"Forbidden",contentType:"application/json",schema:"E-Receipt_IT_API_ErrorModel403Forbidden"}},metadata:{resource:"point-of-sales",operation:"set_offline",authRequired:true,retryable:false}};var p=class{};p.LIST={path:"/mf1/receipts",method:"GET",operationId:"get_receipts_mf1_receipts_get",summary:"Get Receipts",description:"Get a list of electronic receipts",tags:["Receipt"],security:[{"E-Receipt_IT_API_OAuth2PasswordBearer":[]}],parameters:{query:{page:"integer",size:"integer",start_date:"string",end_date:"string",serial_number:"string"}},responses:{200:{description:"Successful Response",contentType:"application/json",schema:"E-Receipt_IT_API_Page__T_Customized_ReceiptOutput_"},403:{description:"Forbidden",contentType:"application/json",schema:"E-Receipt_IT_API_ErrorModel403Forbidden"}},metadata:{resource:"receipts",operation:"list",authRequired:true,retryable:true}},p.CREATE={path:"/mf1/receipts",method:"POST",operationId:"create_receipt_mf1_receipts_post",summary:"Create Receipt",description:"Create a new electronic receipt",tags:["Receipt"],security:[{"E-Receipt_IT_API_OAuth2PasswordBearer":[]}],requestBody:{required:true,contentType:"application/json",schema:"E-Receipt_IT_API_ReceiptInput"},responses:{201:{description:"Successful Response",contentType:"application/json",schema:"E-Receipt_IT_API_ReceiptOutput"},403:{description:"Forbidden",contentType:"application/json",schema:"E-Receipt_IT_API_ErrorModel403Forbidden"},422:{description:"Validation Error",contentType:"application/json",schema:"E-Receipt_IT_API_HTTPValidationError"}},metadata:{resource:"receipts",operation:"create",authRequired:true,retryable:false}},p.VOID={path:"/mf1/receipts",method:"DELETE",operationId:"void_receipt_mf1_receipts_delete",summary:"Void Receipt",description:"Void an electronic receipt",tags:["Receipt"],security:[{"E-Receipt_IT_API_OAuth2PasswordBearer":[]}],requestBody:{required:true,contentType:"application/json",schema:"E-Receipt_IT_API_VoidReceiptRequest"},responses:{200:{description:"Successful Response",contentType:"application/json",schema:"E-Receipt_IT_API_VoidReceiptOutput"},403:{description:"Forbidden",contentType:"application/json",schema:"E-Receipt_IT_API_ErrorModel403Forbidden"}},metadata:{resource:"receipts",operation:"void",authRequired:true,retryable:false}},p.GET_BY_UUID={path:"/mf1/receipts/{receipt_uuid}",method:"GET",operationId:"get_receipt_mf1_receipts__receipt_uuid__get",summary:"Get Receipt",description:"Get an electronic receipt",tags:["Receipt"],security:[{"E-Receipt_IT_API_OAuth2PasswordBearer":[]}],parameters:{path:{receipt_uuid:"string"}},responses:{200:{description:"Successful Response",contentType:"application/json",schema:"E-Receipt_IT_API_ReceiptOutput"},403:{description:"Forbidden",contentType:"application/json",schema:"E-Receipt_IT_API_ErrorModel403Forbidden"},404:{description:"Not Found",contentType:"application/json",schema:"E-Receipt_IT_API_ErrorModel404NotFound"}},metadata:{resource:"receipts",operation:"get",authRequired:true,retryable:true}},p.VOID_WITH_PROOF={path:"/mf1/receipts/void-with-proof",method:"DELETE",operationId:"void_receipt_via_proof_mf1_receipts_void_with_proof_delete",summary:"Void Receipt Via Proof",description:"Void an electronic receipt identified by a proof of purchase",tags:["Receipt"],security:[{"E-Receipt_IT_API_OAuth2PasswordBearer":[]}],requestBody:{required:true,contentType:"application/json",schema:"E-Receipt_IT_API_VoidReceiptWithProofRequest"},responses:{200:{description:"Successful Response",contentType:"application/json",schema:"E-Receipt_IT_API_VoidReceiptOutput"},403:{description:"Forbidden",contentType:"application/json",schema:"E-Receipt_IT_API_ErrorModel403Forbidden"}},metadata:{resource:"receipts",operation:"void_with_proof",authRequired:true,retryable:false}},p.GET_DETAILS={path:"/mf1/receipts/{receipt_uuid}/details",method:"GET",operationId:"get_receipt_details_mf1_receipts__receipt_uuid__details_get",summary:"Get Receipt Details",description:"Get the details or the PDF of an electronic receipt",tags:["Receipt"],security:[{"E-Receipt_IT_API_OAuth2PasswordBearer":[]}],parameters:{path:{receipt_uuid:"string"},header:{Accept:"string"}},responses:{200:{description:"Successful Response"},403:{description:"Forbidden",contentType:"application/json",schema:"E-Receipt_IT_API_ErrorModel403Forbidden"},404:{description:"Not Found",contentType:"application/json",schema:"E-Receipt_IT_API_ErrorModel404NotFound"}},metadata:{resource:"receipts",operation:"get_details",authRequired:true,retryable:true}},p.RETURN_ITEMS={path:"/mf1/receipts/return",method:"POST",operationId:"return_receipt_items_mf1_receipts_return_post",summary:"Return Receipt Items",description:"Return items from an electronic receipt (same PEM or other PEM)",tags:["Receipt"],security:[{"E-Receipt_IT_API_OAuth2PasswordBearer":[]}],requestBody:{required:true,contentType:"application/json",schema:"E-Receipt_IT_API_ReturnRequest"},responses:{200:{description:"Successful Response",contentType:"application/json",schema:"E-Receipt_IT_API_ReceiptOutput"},403:{description:"Forbidden",contentType:"application/json",schema:"E-Receipt_IT_API_ErrorModel403Forbidden"}},metadata:{resource:"receipts",operation:"return_items",authRequired:true,retryable:false}},p.RETURN_ITEMS_WITH_PROOF={path:"/mf1/receipts/return-with-proof",method:"POST",operationId:"return_receipt_items_via_proof_mf1_receipts_return_with_proof_post",summary:"Return Receipt Items Via Proof",description:"Return items from an electronic receipt identified by a proof of purchase",tags:["Receipt"],security:[{"E-Receipt_IT_API_OAuth2PasswordBearer":[]}],requestBody:{required:true,contentType:"application/json",schema:"E-Receipt_IT_API_ReturnWithProofRequest"},responses:{200:{description:"Successful Response",contentType:"application/json",schema:"E-Receipt_IT_API_ReceiptOutput"},403:{description:"Forbidden",contentType:"application/json",schema:"E-Receipt_IT_API_ErrorModel403Forbidden"}},metadata:{resource:"receipts",operation:"return_items_with_proof",authRequired:true,retryable:false}};var m=class{};m.CREATE={path:"/mf1/cash-register",method:"POST",operationId:"create_cash_register_mf1_cash_register_post",summary:"Create Cash Register",description:"Create a new cash register",tags:["Cash Register"],security:[{"E-Receipt_IT_API_OAuth2PasswordBearer":[]}],requestBody:{required:true,contentType:"application/json",schema:"E-Receipt_IT_API_CashRegisterInput"},responses:{201:{description:"Successful Response",contentType:"application/json",schema:"E-Receipt_IT_API_CashRegisterOutput"},403:{description:"Forbidden",contentType:"application/json",schema:"E-Receipt_IT_API_ErrorModel403Forbidden"},422:{description:"Validation Error",contentType:"application/json",schema:"E-Receipt_IT_API_HTTPValidationError"}},metadata:{resource:"cash-registers",operation:"create",authRequired:true,retryable:false}},m.LIST={path:"/mf1/cash-register",method:"GET",operationId:"get_cash_registers_mf1_cash_register_get",summary:"Get Cash Registers",description:"Get a list of cash registers",tags:["Cash Register"],security:[{"E-Receipt_IT_API_OAuth2PasswordBearer":[]}],responses:{200:{description:"Successful Response",contentType:"application/json",schema:"E-Receipt_IT_API_Page__T_Customized_CashRegisterOutput_"},403:{description:"Forbidden",contentType:"application/json",schema:"E-Receipt_IT_API_ErrorModel403Forbidden"}},metadata:{resource:"cash-registers",operation:"list",authRequired:true,retryable:true}},m.GET_BY_ID={path:"/mf1/cash-register/{id}",method:"GET",operationId:"get_cash_register_mf1_cash_register__id__get",summary:"Get Cash Register",description:"Get a specific cash register by ID",tags:["Cash Register"],security:[{"E-Receipt_IT_API_OAuth2PasswordBearer":[]}],parameters:{path:{id:"integer"}},responses:{200:{description:"Successful Response",contentType:"application/json",schema:"E-Receipt_IT_API_CashRegisterOutput"},403:{description:"Forbidden",contentType:"application/json",schema:"E-Receipt_IT_API_ErrorModel403Forbidden"},404:{description:"Not Found",contentType:"application/json",schema:"E-Receipt_IT_API_ErrorModel404NotFound"}},metadata:{resource:"cash-registers",operation:"get",authRequired:true,retryable:true}};var d=class{};d.LIST={path:"/merchants",method:"GET",operationId:"api_merchants_get_collection",summary:"Get Merchants",description:"Get a list of merchants",tags:["Merchant"],security:[{"E-Receipt_IT_API_OAuth2PasswordBearer":[]}],responses:{200:{description:"Successful Response",contentType:"application/json"},403:{description:"Forbidden",contentType:"application/json",schema:"E-Receipt_IT_API_ErrorModel403Forbidden"}},metadata:{resource:"merchants",operation:"list",authRequired:true,retryable:true}},d.CREATE={path:"/merchants",method:"POST",operationId:"api_merchants_post",summary:"Create Merchant",description:"Create a new merchant",tags:["Merchant"],security:[{"E-Receipt_IT_API_OAuth2PasswordBearer":[]}],requestBody:{required:true,contentType:"application/json",schema:"Merchant-create"},responses:{201:{description:"Successful Response",contentType:"application/json",schema:"Merchant-read"},403:{description:"Forbidden",contentType:"application/json",schema:"E-Receipt_IT_API_ErrorModel403Forbidden"},422:{description:"Validation Error",contentType:"application/json",schema:"E-Receipt_IT_API_HTTPValidationError"}},metadata:{resource:"merchants",operation:"create",authRequired:true,retryable:false}},d.GET_BY_UUID={path:"/merchants/{uuid}",method:"GET",operationId:"api_merchants_uuid_get",summary:"Get Merchant",description:"Get a specific merchant by UUID",tags:["Merchant"],security:[{"E-Receipt_IT_API_OAuth2PasswordBearer":[]}],parameters:{path:{uuid:"string"}},responses:{200:{description:"Successful Response",contentType:"application/json",schema:"Merchant-read"},403:{description:"Forbidden",contentType:"application/json",schema:"E-Receipt_IT_API_ErrorModel403Forbidden"},404:{description:"Not Found",contentType:"application/json",schema:"E-Receipt_IT_API_ErrorModel404NotFound"}},metadata:{resource:"merchants",operation:"get",authRequired:true,retryable:true}},d.UPDATE={path:"/merchants/{uuid}",method:"PUT",operationId:"api_merchants_uuid_put",summary:"Update Merchant",description:"Update a merchant",tags:["Merchant"],security:[{"E-Receipt_IT_API_OAuth2PasswordBearer":[]}],parameters:{path:{uuid:"string"}},requestBody:{required:true,contentType:"application/json",schema:"Merchant-update"},responses:{200:{description:"Successful Response",contentType:"application/json",schema:"Merchant-read"},403:{description:"Forbidden",contentType:"application/json",schema:"E-Receipt_IT_API_ErrorModel403Forbidden"},404:{description:"Not Found",contentType:"application/json",schema:"E-Receipt_IT_API_ErrorModel404NotFound"},422:{description:"Validation Error",contentType:"application/json",schema:"E-Receipt_IT_API_HTTPValidationError"}},metadata:{resource:"merchants",operation:"update",authRequired:true,retryable:false}};var h=class{};h.CREATE_POS={path:"/point-of-sales",method:"POST",operationId:"api_point-of-sales_post",summary:"Create Point of Sale",description:"Create a new Point of Sale",tags:["Pem"],security:[{"E-Receipt_IT_API_OAuth2PasswordBearer":[]}],requestBody:{required:true,contentType:"application/json",schema:"PointOfSale-create"},responses:{201:{description:"Successful Response",contentType:"application/json",schema:"PointOfSale-read"},403:{description:"Forbidden",contentType:"application/json",schema:"E-Receipt_IT_API_ErrorModel403Forbidden"},422:{description:"Validation Error",contentType:"application/json",schema:"E-Receipt_IT_API_HTTPValidationError"}},metadata:{resource:"pems",operation:"create_pos",authRequired:true,retryable:false}},h.GET_CERTIFICATES={path:"/point-of-sales/{id}/certificates",method:"GET",operationId:"api_point-of-sales_idcertificates_get",summary:"Get PEM Certificates",description:"Get certificates for a Point of Sale",tags:["Pem"],security:[{"E-Receipt_IT_API_OAuth2PasswordBearer":[]}],parameters:{path:{id:"string"}},responses:{200:{description:"Successful Response",contentType:"application/json"},403:{description:"Forbidden",contentType:"application/json",schema:"E-Receipt_IT_API_ErrorModel403Forbidden"},404:{description:"Not Found",contentType:"application/json",schema:"E-Receipt_IT_API_ErrorModel404NotFound"}},metadata:{resource:"pems",operation:"get_certificates",authRequired:true,retryable:true}};var f=class{static getResourceEndpoints(e){switch(e.toLowerCase()){case "cashiers":return Object.values(_);case "point-of-sales":return Object.values(u);case "receipts":return Object.values(p);case "cash-registers":return Object.values(m);case "merchants":return Object.values(d);case "pems":return Object.values(h);default:return []}}static findEndpointByOperationId(e){let t=[_,u,p,m,d,h];for(let i of t)for(let r of Object.values(i))if(r.operationId===e)return r;return null}static buildUrl(e,t={}){let i=e.path;for(let[r,s]of Object.entries(t))i=i.replace(`{${r}}`,String(s));return i}static requiresAuth(e){return e.metadata?.authRequired??false}static isRetryable(e){return e.metadata?.retryable??false}static getRequestContentType(e){return e.requestBody?.contentType??null}static getResponseContentType(e,t){return e.responses[t]?.contentType??null}};var R=class extends Error{constructor(t,i,r){super(t);this.code=i;r.cause&&(this.cause=r.cause),this.name=this.constructor.name,this.timestamp=new Date,this.requestId=r.requestId??E(),this.operation=r.operation,this.retryable=r.retryable??false,r.statusCode!==void 0&&(this.statusCode=r.statusCode),r.auditInfo!==void 0&&(this.auditInfo=r.auditInfo),Object.setPrototypeOf(this,new.target.prototype);}toJSON(){return {name:this.name,message:this.message,code:this.code,operation:this.operation,retryable:this.retryable,statusCode:this.statusCode,timestamp:this.timestamp.toISOString(),requestId:this.requestId,auditInfo:this.auditInfo,stack:this.stack}}};var l=class extends R{constructor(e,t,i,r={}){super(e,"VALIDATION_ERROR",{operation:t,retryable:false,statusCode:422,...r.requestId!==void 0&&{requestId:r.requestId},...r.auditInfo!==void 0&&{auditInfo:r.auditInfo}}),this.violations=i;}toJSON(){return {...super.toJSON(),violations:this.violations}}};function E(){return `req_${Date.now()}_${Math.random().toString(36).substring(2,11)}`}var g=class{constructor(e){this.client=e.client,this.endpoints=e.endpoints;}async executeRequest(e,t,i={}){let r=this.endpoints[e];if(!r)throw new l(`Unknown endpoint: ${e}`,"execute_request",[{field:"endpointKey",message:`Endpoint '${e}' not found`,code:"UNKNOWN_ENDPOINT"}]);this.validateRequest({endpoint:r,operation:e,data:t,...i});let s=this.buildRequestUrl(r,i.pathParams),n={method:r.method,url:s,data:t,headers:{...this.getDefaultHeaders(r),...i.headers},metadata:{operationId:r.operationId,resource:r.metadata?.resource,operation:r.metadata?.operation,...i.metadata},skipRetry:i.skipRetry??!f.isRetryable(r)};i.queryParams&&(n.params=i.queryParams),i.timeout&&(n.timeout=i.timeout),i.skipCircuitBreaker!==void 0&&(n.skipCircuitBreaker=i.skipCircuitBreaker);try{let o=await this.client.request(n);return this.validateResponse(r,o.data),o.data}catch(o){throw this.enhanceError(o,r,e,i)}}buildRequestUrl(e,t={}){return f.buildUrl(e,t)}getDefaultHeaders(e){let t={};e.requestBody&&(t["Content-Type"]=e.requestBody.contentType);let i=e.responses[200]||e.responses[201];return i?.contentType&&(t.Accept=i.contentType),t}validateRequest(e){let{endpoint:t,operation:i,data:r,pathParams:s,queryParams:n}=e,o=[];if(t.parameters?.path)for(let[c,I]of Object.entries(t.parameters.path))if(!s||!(c in s))o.push({field:`path.${c}`,message:`Required path parameter '${c}' is missing`,code:"MISSING_PATH_PARAM"});else {let y=s[c];this.validateParameterType(y,I)||o.push({field:`path.${c}`,message:`Path parameter '${c}' must be of type ${I}`,code:"INVALID_PATH_PARAM_TYPE"});}if(t.requestBody?.required&&!r&&o.push({field:"body",message:"Request body is required",code:"MISSING_BODY"}),t.parameters?.query&&n)for(let[c,I]of Object.entries(t.parameters.query)){let y=n[c];y!==void 0&&!this.validateParameterType(y,I)&&o.push({field:`query.${c}`,message:`Query parameter '${c}' must be of type ${I}`,code:"INVALID_QUERY_PARAM_TYPE"});}if(o.length>0)throw new l(`Request validation failed for operation '${i}'`,i,o)}validateParameterType(e,t){switch(t){case "string":return typeof e=="string";case "integer":case "number":return typeof e=="number"||typeof e=="string"&&!isNaN(Number(e));case "boolean":return typeof e=="boolean";default:return  true}}validateResponse(e,t){t==null&&(Object.keys(e.responses).some(r=>r==="204"||e.responses[r]?.description?.toLowerCase().includes("no content"))||console.warn(`Received null/undefined response for ${e.operationId}`));}enhanceError(e,t,i,r){let s=new e.constructor(e.message,e.code,{operation:e.operation||t.operationId,retryable:e.retryable!==void 0?e.retryable:f.isRetryable(t),statusCode:e.statusCode,requestId:e.requestId,auditInfo:{...e.auditInfo,pemId:t.metadata?.resource==="point-of-sales"?String(r.pathParams?.serial_number||""):e.auditInfo?.pemId},cause:e.cause});return Object.defineProperty(s,"openapiMetadata",{value:{resource:t.metadata?.resource,endpointOperation:i,httpMethod:t.method,path:t.path},writable:false,enumerable:false,configurable:false}),s}hasOperation(e){return e in this.endpoints}getEndpoint(e){return this.endpoints[e]||null}getAvailableOperations(){return Object.keys(this.endpoints)}createUnsupportedOperationError(e){return new l(`Operation '${e}' is not supported by this resource`,"unsupported_operation",[{field:"operation",message:`Available operations: ${this.getAvailableOperations().join(", ")}`,code:"UNSUPPORTED_OPERATION"}])}static formatValidationErrors(e){return e.map(t=>`${t.field}: ${t.message}`).join(", ")}static extractErrorDetails(e){return e instanceof l?{message:e.message,details:e.violations}:e instanceof Error?{message:e.message}:{message:"Unknown error occurred"}}static isTemporaryError(e){return e.name==="NetworkError"?true:e.statusCode?[429,500,502,503,504].includes(e.statusCode):e.retryable??false}static getRetryDelay(e,t){let s=Math.min(1e3*Math.pow(2,t-1),3e4),n=s*.25;return s+=(Math.random()*2-1)*n,Math.floor(s)}};var T=class a extends g{constructor(e){super({client:e,endpoints:{list:d.LIST,create:d.CREATE,getByUuid:d.GET_BY_UUID,update:d.UPDATE}});}async list(){return this.executeRequest("list",void 0,{metadata:{operation:"list_merchants"}})}async create(e,t={}){return await this.validateMerchantCreateInput(e,t),this.executeRequest("create",e,{metadata:{operation:"create_merchant",fiscalId:e.fiscal_id,email:e.email,businessName:e.name}})}async retrieve(e){return this.executeRequest("getByUuid",void 0,{pathParams:{uuid:e},metadata:{operation:"get_merchant",merchantId:e}})}async update(e,t,i={}){return await this.validateMerchantUpdateInput(t,i),this.executeRequest("update",t,{pathParams:{uuid:e},metadata:{operation:"update_merchant",merchantId:e,businessName:t.name}})}async getAnalytics(e){let t=await this.retrieve(e);return a.analyzeBusinessProfile(t)}async validateAddress(e){return a.validateItalianAddress(e)}async validateMerchantCreateInput(e,t={}){let i=[];if(!e.fiscal_id)i.push({field:"fiscal_id",message:"Fiscal ID is required",code:"REQUIRED"});else if(t.validateVATNumber){let r=await this.validateItalianVATNumber(e.fiscal_id);r.isValid||i.push({field:"fiscal_id",message:r.error||"Invalid Italian VAT number",code:"INVALID_VAT_NUMBER"});}if(!e.name||e.name.trim().length===0)i.push({field:"name",message:"Business name is required",code:"REQUIRED"});else {let r=this.validateBusinessName(e.name);r.isValid||i.push({field:"name",message:r.error||"Invalid business name",code:"INVALID_BUSINESS_NAME"});}if(e.email?this.isValidEmail(e.email)||i.push({field:"email",message:"Invalid email format",code:"INVALID_EMAIL"}):i.push({field:"email",message:"Email is required",code:"REQUIRED"}),!e.password)i.push({field:"password",message:"Password is required",code:"REQUIRED"});else {let r=this.validatePassword(e.password);r.isValid||i.push({field:"password",message:r.error||"Password does not meet requirements",code:"WEAK_PASSWORD"});}if(e.address&&t.enforceAddressValidation){let r=await a.validateItalianAddress(e.address);r.isValid||i.push(...r.errors.map(s=>({field:"address",message:s,code:"INVALID_ADDRESS"})));}if(i.length>0)throw new l("Invalid merchant create input","create_merchant",i)}async validateMerchantUpdateInput(e,t={}){let i=[];if(!e.name||e.name.trim().length===0)i.push({field:"name",message:"Business name is required",code:"REQUIRED"});else {let r=this.validateBusinessName(e.name);r.isValid||i.push({field:"name",message:r.error||"Invalid business name",code:"INVALID_BUSINESS_NAME"});}if(e.address&&t.enforceAddressValidation){let r=await a.validateItalianAddress(e.address);r.isValid||i.push(...r.errors.map(s=>({field:"address",message:s,code:"INVALID_ADDRESS"})));}if(i.length>0)throw new l("Invalid merchant update input","update_merchant",i)}async validateItalianVATNumber(e){return a.isValidItalianVATNumber(e)?{isValid:true}:{isValid:false,error:"Invalid Italian VAT number format or checksum"}}validateBusinessName(e){return e.length>200?{isValid:false,error:"Business name cannot exceed 200 characters"}:/^[\w\s&.,'()\-]+$/u.test(e)?(/test|example|sample/i.test(e)&&console.warn(`Potentially test business name detected: ${e}`),{isValid:true}):{isValid:false,error:"Business name contains invalid characters"}}validatePassword(e){return e.length<8?{isValid:false,error:"Password must be at least 8 characters long"}:/^(?=.*[a-z])(?=.*[A-Z])(?=.*\d)/.test(e)?{isValid:true}:{isValid:false,error:"Password must contain uppercase, lowercase, and numeric characters"}}isValidEmail(e){return /^[^\s@]+@[^\s@]+\.[^\s@]+$/.test(e)}static isValidItalianVATNumber(e){if(!/^\d{11}$/.test(e))return  false;let t=0;for(let r=0;r<10;r++){let s=parseInt(e[r],10);r%2===1&&(s*=2,s>9&&(s=Math.floor(s/10)+s%10)),t+=s;}return (10-t%10)%10===parseInt(e[10],10)}static formatFiscalId(e){return e.replace(/(\d{3})(\d{3})(\d{5})/,"$1 $2 $3")}static async validateItalianAddress(e){let t=[],i=[];if((!e.street_address||e.street_address.trim().length===0)&&t.push("Street address is required"),!e.zip_code||!/^\d{5}$/.test(e.zip_code))t.push("ZIP code must be exactly 5 digits");else {let n=parseInt(e.zip_code,10);(n<1e4||n>98168)&&t.push("Invalid Italian postal code range");}(!e.city||e.city.trim().length===0)&&t.push("City is required"),!e.province||e.province.length!==2?t.push("Province must be exactly 2 characters"):["AG","AL","AN","AO","AQ","AR","AP","AT","AV","BA","BT","BL","BN","BG","BI","BO","BZ","BS","BR","CA","CL","CB","CI","CE","CT","CZ","CH","CO","CS","CR","KR","CN","EN","FM","FE","FI","FG","FC","FR","GE","GO","GR","IM","IS","SP","LT","LE","LC","LI","LO","LU","MC","MN","MS","MT","VS","ME","MI","MO","MB","NA","NO","NU","OG","OT","OR","PD","PA","PR","PV","PG","PU","PE","PC","PI","PT","PN","PZ","PO","RG","RA","RC","RE","RI","RN","RM","RO","SA","SS","SV","SI","SR","SO","TA","TE","TR","TO","TP","TN","TV","TS","UD","VA","VE","VB","VC","VR","VV","VI","VT"].includes(e.province.toUpperCase())||(t.push("Invalid Italian province code"),i.push("Please use a valid Italian province code (e.g., RM for Rome, MI for Milan)"));let r=t.length===0,s=r?`${e.street_address}, ${e.zip_code} ${e.city} (${e.province.toUpperCase()})`:void 0;return {isValid:r,errors:t,suggestions:i,formattedAddress:s}}static analyzeBusinessProfile(e){let t=[],i=[],r=0,s=6;e.fiscal_id?r++:t.push("fiscal_id"),e.name?r++:t.push("name"),e.email?r++:t.push("email"),e.address?(r++,e.address.street_address||(t.push("address.street_address"),i.push("Add complete street address for legal compliance")),e.address.zip_code||t.push("address.zip_code"),e.address.city||t.push("address.city"),e.address.province||t.push("address.province")):(t.push("address"),i.push("Add complete business address for legal compliance"));let n=new Date().toISOString(),o=Math.floor((Date.now()-new Date(n).getTime())/(1e3*60*60*24));r<s&&i.push("Complete all required business information"),i.push("Add phone number for better customer communication"),i.push("Add website URL to improve business presence");let c="compliant";return t.length>0&&(c=t.length>2?"non-compliant":"pending"),{registrationDate:n,businessAge:o,completenessScore:Math.round(r/s*100),missingFields:t,recommendations:i,complianceStatus:c}}static generateBusinessSummary(e){let t=e.address?` - ${e.address.city}, ${e.address.province}`:"";return `${e.name} (VAT: ${this.formatFiscalId(e.fiscal_id||"")})${t}`}static isValidBusinessName(e){return typeof e=="string"&&e.trim().length>0&&e.length<=200&&/^[\w\s&.,'()\-]+$/u.test(e)}static normalizeBusinessName(e){return e.trim().replace(/\s+/g," ").replace(/^\\w/,t=>t.toUpperCase())}static getProvinceCode(e){return e.address?.province||null}static isInRegion(e,t){let i=this.getProvinceCode(e);return i?t.includes(i.toUpperCase()):false}static getItalianRegions(){return {"Northern Italy":["AO","TO","CN","AT","AL","VC","BI","NO","VB","VA","CO","SO","MI","MB","BG","BS","PV","CR","MN","LO","LC","BZ","TN","VR","VI","BL","TV","VE","PD","RO","UD","PN","TS","GO","PC","PR","RE","MO","BO","FE","RA","FC","RN","GE","SV","IM","SP","MS"],"Central Italy":["LU","PT","FI","LI","PI","AR","SI","GR","PO","PG","TR","VT","RI","RM","LT","FR","AQ","TE","PE","CH","MC","AP","AN","PU","FM"],"Southern Italy":["CB","IS","CE","BN","NA","AV","SA","FG","BT","BA","BR","TA","MT","PZ","CS","CZ","VV","RC","KR"],Islands:["PA","ME","AG","CL","EN","CT","RG","SR","TP","CA","CI","VS","NU","OG","OR","SS","OT"]}}static getMerchantRegion(e){let t=this.getProvinceCode(e);if(!t)return null;let i=this.getItalianRegions();for(let[r,s]of Object.entries(i))if(s.includes(t.toUpperCase()))return r;return null}};export{T as Merchants,T as MerchantsResource};//# sourceMappingURL=merchants.mjs.map
//# sourceMappingURL=merchants.mjs.map