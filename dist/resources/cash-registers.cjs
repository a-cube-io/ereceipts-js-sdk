'use strict';var l=class{};l.LIST={path:"/mf1/cashiers",method:"GET",operationId:"read_cashiers_mf1_cashiers_get",summary:"Read Cashiers",description:"Get a paginated list of cashiers",tags:["Cashier"],security:[{"E-Receipt_IT_API_OAuth2PasswordBearer":[]}],parameters:{query:{page:"integer",size:"integer"}},responses:{200:{description:"Successful Response",contentType:"application/json",schema:"E-Receipt_IT_API_Page__T_Customized_CashierOutput_"},403:{description:"Forbidden",contentType:"application/json",schema:"E-Receipt_IT_API_ErrorModel403Forbidden"},404:{description:"Not Found",contentType:"application/json",schema:"E-Receipt_IT_API_ErrorModel404NotFound"},422:{description:"Validation Error",contentType:"application/json",schema:"E-Receipt_IT_API_HTTPValidationError"}},metadata:{resource:"cashiers",operation:"list",authRequired:true,retryable:true}},l.CREATE={path:"/mf1/cashiers",method:"POST",operationId:"create_cashier_mf1_cashiers_post",summary:"Create Cashier",description:"Create a new cashier account",tags:["Cashier"],security:[{"E-Receipt_IT_API_OAuth2PasswordBearer":[]}],requestBody:{required:true,contentType:"application/json",schema:"E-Receipt_IT_API_CashierCreateInput"},responses:{201:{description:"Successful Response",contentType:"application/json",schema:"E-Receipt_IT_API_CashierOutput"},403:{description:"Forbidden",contentType:"application/json",schema:"E-Receipt_IT_API_ErrorModel403Forbidden"},422:{description:"Validation Error",contentType:"application/json",schema:"E-Receipt_IT_API_HTTPValidationError"}},metadata:{resource:"cashiers",operation:"create",authRequired:true,retryable:false}},l.ME={path:"/mf1/cashiers/me",method:"GET",operationId:"read_cashier_me_mf1_cashiers_me_get",summary:"Read Cashier Me",description:"Read currently authenticated cashier's information",tags:["Cashier"],security:[{"E-Receipt_IT_API_OAuth2PasswordBearer":[]}],responses:{200:{description:"Successful Response",contentType:"application/json",schema:"E-Receipt_IT_API_CashierOutput"},403:{description:"Forbidden",contentType:"application/json",schema:"E-Receipt_IT_API_ErrorModel403Forbidden"},404:{description:"Not Found",contentType:"application/json",schema:"E-Receipt_IT_API_ErrorModel404NotFound"}},metadata:{resource:"cashiers",operation:"me",authRequired:true,retryable:true}},l.GET_BY_ID={path:"/mf1/cashiers/{cashier_id}",method:"GET",operationId:"read_cashier_by_id_mf1_cashiers__cashier_id__get",summary:"Read Cashier By Id",description:"Get a specific user by id",tags:["Cashier"],security:[{"E-Receipt_IT_API_OAuth2PasswordBearer":[]}],parameters:{path:{cashier_id:"integer"}},responses:{200:{description:"Successful Response",contentType:"application/json",schema:"E-Receipt_IT_API_CashierOutput"},403:{description:"Forbidden",contentType:"application/json",schema:"E-Receipt_IT_API_ErrorModel403Forbidden"},404:{description:"Not Found",contentType:"application/json",schema:"E-Receipt_IT_API_ErrorModel404NotFound"},422:{description:"Validation Error",contentType:"application/json",schema:"E-Receipt_IT_API_HTTPValidationError"}},metadata:{resource:"cashiers",operation:"get",authRequired:true,retryable:true}},l.DELETE={path:"/mf1/cashiers/{cashier_id}",method:"DELETE",operationId:"delete_cashier_mf1_cashiers__cashier_id__delete",summary:"Delete Cashier",description:"Delete a cashier",tags:["Cashier"],security:[{"E-Receipt_IT_API_OAuth2PasswordBearer":[]}],parameters:{path:{cashier_id:"integer"}},responses:{204:{description:"Successful Response"},403:{description:"Forbidden",contentType:"application/json",schema:"E-Receipt_IT_API_ErrorModel403Forbidden"},404:{description:"Not Found",contentType:"application/json",schema:"E-Receipt_IT_API_ErrorModel404NotFound"},422:{description:"Validation Error",contentType:"application/json",schema:"E-Receipt_IT_API_HTTPValidationError"}},metadata:{resource:"cashiers",operation:"delete",authRequired:true,retryable:false}};var d=class{};d.LIST={path:"/mf1/point-of-sales",method:"GET",operationId:"read_point_of_sales_mf1_point_of_sales_get",summary:"Read Point Of Sales",description:"Retrieve PEMs",tags:["Point of Sale"],security:[{"E-Receipt_IT_API_OAuth2PasswordBearer":[]}],responses:{200:{description:"Successful Response",contentType:"application/json",schema:"E-Receipt_IT_API_Page__T_Customized_PointOfSaleOutput_"},403:{description:"Forbidden",contentType:"application/json",schema:"E-Receipt_IT_API_ErrorModel403Forbidden"}},metadata:{resource:"point-of-sales",operation:"list",authRequired:true,retryable:true}},d.GET_BY_SERIAL={path:"/mf1/point-of-sales/{serial_number}",method:"GET",operationId:"read_point_of_sale_mf1_point_of_sales__serial_number__get",summary:"Read Point Of Sale",description:"Get a specific Point of Sale by serial number",tags:["Point of Sale"],security:[{"E-Receipt_IT_API_OAuth2PasswordBearer":[]}],parameters:{path:{serial_number:"string"}},responses:{200:{description:"Successful Response",contentType:"application/json",schema:"E-Receipt_IT_API_PointOfSaleOutput"},403:{description:"Forbidden",contentType:"application/json",schema:"E-Receipt_IT_API_ErrorModel403Forbidden"},404:{description:"Not Found",contentType:"application/json",schema:"E-Receipt_IT_API_ErrorModel404NotFound"}},metadata:{resource:"point-of-sales",operation:"get",authRequired:true,retryable:true}},d.CLOSE_JOURNAL={path:"/mf1/point-of-sales/close",method:"POST",operationId:"close_journal_mf1_point_of_sales_close_post",summary:"Close Journal",description:"Close the daily journal for Point of Sales",tags:["Point of Sale"],security:[{"E-Receipt_IT_API_OAuth2PasswordBearer":[]}],requestBody:{required:true,contentType:"application/json",schema:"E-Receipt_IT_API_CloseJournalRequest"},responses:{200:{description:"Successful Response",contentType:"application/json",schema:"E-Receipt_IT_API_CloseJournalOutput"},403:{description:"Forbidden",contentType:"application/json",schema:"E-Receipt_IT_API_ErrorModel403Forbidden"}},metadata:{resource:"point-of-sales",operation:"close_journal",authRequired:true,retryable:false}},d.ACTIVATION={path:"/mf1/point-of-sales/{serial_number}/activation",method:"POST",operationId:"post_activation_mf1_point_of_sales__serial_number__activation_post",summary:"Post Activation",description:"Trigger the activation process of a Point of Sale by requesting a certificate to the Italian Tax Agency",tags:["Point of Sale"],security:[{"E-Receipt_IT_API_OAuth2PasswordBearer":[]}],parameters:{path:{serial_number:"string"}},requestBody:{required:true,contentType:"application/json",schema:"E-Receipt_IT_API_ActivationRequest"},responses:{200:{description:"Successful Response",contentType:"application/json",schema:"E-Receipt_IT_API_ActivationOutput"},403:{description:"Forbidden",contentType:"application/json",schema:"E-Receipt_IT_API_ErrorModel403Forbidden"}},metadata:{resource:"point-of-sales",operation:"activation",authRequired:true,retryable:false}},d.CREATE_INACTIVITY={path:"/mf1/point-of-sales/{serial_number}/inactivity",method:"POST",operationId:"create_inactivity_period_mf1_point_of_sales__serial_number__inactivity_post",summary:"Create Inactivity Period",description:"Create a new inactivity period",tags:["Point of Sale"],security:[{"E-Receipt_IT_API_OAuth2PasswordBearer":[]}],parameters:{path:{serial_number:"string"}},requestBody:{required:true,contentType:"application/json",schema:"E-Receipt_IT_API_InactivityRequest"},responses:{200:{description:"Successful Response",contentType:"application/json"},403:{description:"Forbidden",contentType:"application/json",schema:"E-Receipt_IT_API_ErrorModel403Forbidden"}},metadata:{resource:"point-of-sales",operation:"create_inactivity",authRequired:true,retryable:false}},d.SET_OFFLINE={path:"/mf1/point-of-sales/{serial_number}/status/offline",method:"POST",operationId:"post_offline_mf1_point_of_sales__serial_number__status_offline_post",summary:"Post Offline",description:"Change the state of the Point of Sale to 'offline'",tags:["Point of Sale"],security:[{"E-Receipt_IT_API_OAuth2PasswordBearer":[]}],parameters:{path:{serial_number:"string"}},responses:{200:{description:"Successful Response",contentType:"application/json"},403:{description:"Forbidden",contentType:"application/json",schema:"E-Receipt_IT_API_ErrorModel403Forbidden"}},metadata:{resource:"point-of-sales",operation:"set_offline",authRequired:true,retryable:false}};var u=class{};u.LIST={path:"/mf1/receipts",method:"GET",operationId:"get_receipts_mf1_receipts_get",summary:"Get Receipts",description:"Get a list of electronic receipts",tags:["Receipt"],security:[{"E-Receipt_IT_API_OAuth2PasswordBearer":[]}],parameters:{query:{page:"integer",size:"integer",start_date:"string",end_date:"string",serial_number:"string"}},responses:{200:{description:"Successful Response",contentType:"application/json",schema:"E-Receipt_IT_API_Page__T_Customized_ReceiptOutput_"},403:{description:"Forbidden",contentType:"application/json",schema:"E-Receipt_IT_API_ErrorModel403Forbidden"}},metadata:{resource:"receipts",operation:"list",authRequired:true,retryable:true}},u.CREATE={path:"/mf1/receipts",method:"POST",operationId:"create_receipt_mf1_receipts_post",summary:"Create Receipt",description:"Create a new electronic receipt",tags:["Receipt"],security:[{"E-Receipt_IT_API_OAuth2PasswordBearer":[]}],requestBody:{required:true,contentType:"application/json",schema:"E-Receipt_IT_API_ReceiptInput"},responses:{201:{description:"Successful Response",contentType:"application/json",schema:"E-Receipt_IT_API_ReceiptOutput"},403:{description:"Forbidden",contentType:"application/json",schema:"E-Receipt_IT_API_ErrorModel403Forbidden"},422:{description:"Validation Error",contentType:"application/json",schema:"E-Receipt_IT_API_HTTPValidationError"}},metadata:{resource:"receipts",operation:"create",authRequired:true,retryable:false}},u.VOID={path:"/mf1/receipts",method:"DELETE",operationId:"void_receipt_mf1_receipts_delete",summary:"Void Receipt",description:"Void an electronic receipt",tags:["Receipt"],security:[{"E-Receipt_IT_API_OAuth2PasswordBearer":[]}],requestBody:{required:true,contentType:"application/json",schema:"E-Receipt_IT_API_VoidReceiptRequest"},responses:{200:{description:"Successful Response",contentType:"application/json",schema:"E-Receipt_IT_API_VoidReceiptOutput"},403:{description:"Forbidden",contentType:"application/json",schema:"E-Receipt_IT_API_ErrorModel403Forbidden"}},metadata:{resource:"receipts",operation:"void",authRequired:true,retryable:false}},u.GET_BY_UUID={path:"/mf1/receipts/{receipt_uuid}",method:"GET",operationId:"get_receipt_mf1_receipts__receipt_uuid__get",summary:"Get Receipt",description:"Get an electronic receipt",tags:["Receipt"],security:[{"E-Receipt_IT_API_OAuth2PasswordBearer":[]}],parameters:{path:{receipt_uuid:"string"}},responses:{200:{description:"Successful Response",contentType:"application/json",schema:"E-Receipt_IT_API_ReceiptOutput"},403:{description:"Forbidden",contentType:"application/json",schema:"E-Receipt_IT_API_ErrorModel403Forbidden"},404:{description:"Not Found",contentType:"application/json",schema:"E-Receipt_IT_API_ErrorModel404NotFound"}},metadata:{resource:"receipts",operation:"get",authRequired:true,retryable:true}},u.VOID_WITH_PROOF={path:"/mf1/receipts/void-with-proof",method:"DELETE",operationId:"void_receipt_via_proof_mf1_receipts_void_with_proof_delete",summary:"Void Receipt Via Proof",description:"Void an electronic receipt identified by a proof of purchase",tags:["Receipt"],security:[{"E-Receipt_IT_API_OAuth2PasswordBearer":[]}],requestBody:{required:true,contentType:"application/json",schema:"E-Receipt_IT_API_VoidReceiptWithProofRequest"},responses:{200:{description:"Successful Response",contentType:"application/json",schema:"E-Receipt_IT_API_VoidReceiptOutput"},403:{description:"Forbidden",contentType:"application/json",schema:"E-Receipt_IT_API_ErrorModel403Forbidden"}},metadata:{resource:"receipts",operation:"void_with_proof",authRequired:true,retryable:false}},u.GET_DETAILS={path:"/mf1/receipts/{receipt_uuid}/details",method:"GET",operationId:"get_receipt_details_mf1_receipts__receipt_uuid__details_get",summary:"Get Receipt Details",description:"Get the details or the PDF of an electronic receipt",tags:["Receipt"],security:[{"E-Receipt_IT_API_OAuth2PasswordBearer":[]}],parameters:{path:{receipt_uuid:"string"},header:{Accept:"string"}},responses:{200:{description:"Successful Response"},403:{description:"Forbidden",contentType:"application/json",schema:"E-Receipt_IT_API_ErrorModel403Forbidden"},404:{description:"Not Found",contentType:"application/json",schema:"E-Receipt_IT_API_ErrorModel404NotFound"}},metadata:{resource:"receipts",operation:"get_details",authRequired:true,retryable:true}},u.RETURN_ITEMS={path:"/mf1/receipts/return",method:"POST",operationId:"return_receipt_items_mf1_receipts_return_post",summary:"Return Receipt Items",description:"Return items from an electronic receipt (same PEM or other PEM)",tags:["Receipt"],security:[{"E-Receipt_IT_API_OAuth2PasswordBearer":[]}],requestBody:{required:true,contentType:"application/json",schema:"E-Receipt_IT_API_ReturnRequest"},responses:{200:{description:"Successful Response",contentType:"application/json",schema:"E-Receipt_IT_API_ReceiptOutput"},403:{description:"Forbidden",contentType:"application/json",schema:"E-Receipt_IT_API_ErrorModel403Forbidden"}},metadata:{resource:"receipts",operation:"return_items",authRequired:true,retryable:false}},u.RETURN_ITEMS_WITH_PROOF={path:"/mf1/receipts/return-with-proof",method:"POST",operationId:"return_receipt_items_via_proof_mf1_receipts_return_with_proof_post",summary:"Return Receipt Items Via Proof",description:"Return items from an electronic receipt identified by a proof of purchase",tags:["Receipt"],security:[{"E-Receipt_IT_API_OAuth2PasswordBearer":[]}],requestBody:{required:true,contentType:"application/json",schema:"E-Receipt_IT_API_ReturnWithProofRequest"},responses:{200:{description:"Successful Response",contentType:"application/json",schema:"E-Receipt_IT_API_ReceiptOutput"},403:{description:"Forbidden",contentType:"application/json",schema:"E-Receipt_IT_API_ErrorModel403Forbidden"}},metadata:{resource:"receipts",operation:"return_items_with_proof",authRequired:true,retryable:false}};var p=class{};p.CREATE={path:"/mf1/cash-register",method:"POST",operationId:"create_cash_register_mf1_cash_register_post",summary:"Create Cash Register",description:"Create a new cash register",tags:["Cash Register"],security:[{"E-Receipt_IT_API_OAuth2PasswordBearer":[]}],requestBody:{required:true,contentType:"application/json",schema:"E-Receipt_IT_API_CashRegisterInput"},responses:{201:{description:"Successful Response",contentType:"application/json",schema:"E-Receipt_IT_API_CashRegisterOutput"},403:{description:"Forbidden",contentType:"application/json",schema:"E-Receipt_IT_API_ErrorModel403Forbidden"},422:{description:"Validation Error",contentType:"application/json",schema:"E-Receipt_IT_API_HTTPValidationError"}},metadata:{resource:"cash-registers",operation:"create",authRequired:true,retryable:false}},p.LIST={path:"/mf1/cash-register",method:"GET",operationId:"get_cash_registers_mf1_cash_register_get",summary:"Get Cash Registers",description:"Get a list of cash registers",tags:["Cash Register"],security:[{"E-Receipt_IT_API_OAuth2PasswordBearer":[]}],responses:{200:{description:"Successful Response",contentType:"application/json",schema:"E-Receipt_IT_API_Page__T_Customized_CashRegisterOutput_"},403:{description:"Forbidden",contentType:"application/json",schema:"E-Receipt_IT_API_ErrorModel403Forbidden"}},metadata:{resource:"cash-registers",operation:"list",authRequired:true,retryable:true}},p.GET_BY_ID={path:"/mf1/cash-register/{id}",method:"GET",operationId:"get_cash_register_mf1_cash_register__id__get",summary:"Get Cash Register",description:"Get a specific cash register by ID",tags:["Cash Register"],security:[{"E-Receipt_IT_API_OAuth2PasswordBearer":[]}],parameters:{path:{id:"integer"}},responses:{200:{description:"Successful Response",contentType:"application/json",schema:"E-Receipt_IT_API_CashRegisterOutput"},403:{description:"Forbidden",contentType:"application/json",schema:"E-Receipt_IT_API_ErrorModel403Forbidden"},404:{description:"Not Found",contentType:"application/json",schema:"E-Receipt_IT_API_ErrorModel404NotFound"}},metadata:{resource:"cash-registers",operation:"get",authRequired:true,retryable:true}};var h=class{};h.LIST={path:"/merchants",method:"GET",operationId:"api_merchants_get_collection",summary:"Get Merchants",description:"Get a list of merchants",tags:["Merchant"],security:[{"E-Receipt_IT_API_OAuth2PasswordBearer":[]}],responses:{200:{description:"Successful Response",contentType:"application/json"},403:{description:"Forbidden",contentType:"application/json",schema:"E-Receipt_IT_API_ErrorModel403Forbidden"}},metadata:{resource:"merchants",operation:"list",authRequired:true,retryable:true}},h.CREATE={path:"/merchants",method:"POST",operationId:"api_merchants_post",summary:"Create Merchant",description:"Create a new merchant",tags:["Merchant"],security:[{"E-Receipt_IT_API_OAuth2PasswordBearer":[]}],requestBody:{required:true,contentType:"application/json",schema:"Merchant-create"},responses:{201:{description:"Successful Response",contentType:"application/json",schema:"Merchant-read"},403:{description:"Forbidden",contentType:"application/json",schema:"E-Receipt_IT_API_ErrorModel403Forbidden"},422:{description:"Validation Error",contentType:"application/json",schema:"E-Receipt_IT_API_HTTPValidationError"}},metadata:{resource:"merchants",operation:"create",authRequired:true,retryable:false}},h.GET_BY_UUID={path:"/merchants/{uuid}",method:"GET",operationId:"api_merchants_uuid_get",summary:"Get Merchant",description:"Get a specific merchant by UUID",tags:["Merchant"],security:[{"E-Receipt_IT_API_OAuth2PasswordBearer":[]}],parameters:{path:{uuid:"string"}},responses:{200:{description:"Successful Response",contentType:"application/json",schema:"Merchant-read"},403:{description:"Forbidden",contentType:"application/json",schema:"E-Receipt_IT_API_ErrorModel403Forbidden"},404:{description:"Not Found",contentType:"application/json",schema:"E-Receipt_IT_API_ErrorModel404NotFound"}},metadata:{resource:"merchants",operation:"get",authRequired:true,retryable:true}},h.UPDATE={path:"/merchants/{uuid}",method:"PUT",operationId:"api_merchants_uuid_put",summary:"Update Merchant",description:"Update a merchant",tags:["Merchant"],security:[{"E-Receipt_IT_API_OAuth2PasswordBearer":[]}],parameters:{path:{uuid:"string"}},requestBody:{required:true,contentType:"application/json",schema:"Merchant-update"},responses:{200:{description:"Successful Response",contentType:"application/json",schema:"Merchant-read"},403:{description:"Forbidden",contentType:"application/json",schema:"E-Receipt_IT_API_ErrorModel403Forbidden"},404:{description:"Not Found",contentType:"application/json",schema:"E-Receipt_IT_API_ErrorModel404NotFound"},422:{description:"Validation Error",contentType:"application/json",schema:"E-Receipt_IT_API_HTTPValidationError"}},metadata:{resource:"merchants",operation:"update",authRequired:true,retryable:false}};var f=class{};f.CREATE_POS={path:"/point-of-sales",method:"POST",operationId:"api_point-of-sales_post",summary:"Create Point of Sale",description:"Create a new Point of Sale",tags:["Pem"],security:[{"E-Receipt_IT_API_OAuth2PasswordBearer":[]}],requestBody:{required:true,contentType:"application/json",schema:"PointOfSale-create"},responses:{201:{description:"Successful Response",contentType:"application/json",schema:"PointOfSale-read"},403:{description:"Forbidden",contentType:"application/json",schema:"E-Receipt_IT_API_ErrorModel403Forbidden"},422:{description:"Validation Error",contentType:"application/json",schema:"E-Receipt_IT_API_HTTPValidationError"}},metadata:{resource:"pems",operation:"create_pos",authRequired:true,retryable:false}},f.GET_CERTIFICATES={path:"/point-of-sales/{id}/certificates",method:"GET",operationId:"api_point-of-sales_idcertificates_get",summary:"Get PEM Certificates",description:"Get certificates for a Point of Sale",tags:["Pem"],security:[{"E-Receipt_IT_API_OAuth2PasswordBearer":[]}],parameters:{path:{id:"string"}},responses:{200:{description:"Successful Response",contentType:"application/json"},403:{description:"Forbidden",contentType:"application/json",schema:"E-Receipt_IT_API_ErrorModel403Forbidden"},404:{description:"Not Found",contentType:"application/json",schema:"E-Receipt_IT_API_ErrorModel404NotFound"}},metadata:{resource:"pems",operation:"get_certificates",authRequired:true,retryable:true}};var g=class{static getResourceEndpoints(e){switch(e.toLowerCase()){case "cashiers":return Object.values(l);case "point-of-sales":return Object.values(d);case "receipts":return Object.values(u);case "cash-registers":return Object.values(p);case "merchants":return Object.values(h);case "pems":return Object.values(f);default:return []}}static findEndpointByOperationId(e){let t=[l,d,u,p,h,f];for(let r of t)for(let i of Object.values(r))if(i.operationId===e)return i;return null}static buildUrl(e,t={}){let r=e.path;for(let[i,s]of Object.entries(t))r=r.replace(`{${i}}`,String(s));return r}static requiresAuth(e){return e.metadata?.authRequired??false}static isRetryable(e){return e.metadata?.retryable??false}static getRequestContentType(e){return e.requestBody?.contentType??null}static getResponseContentType(e,t){return e.responses[t]?.contentType??null}};var R=class extends Error{constructor(t,r,i){super(t);this.code=r;i.cause&&(this.cause=i.cause),this.name=this.constructor.name,this.timestamp=new Date,this.requestId=i.requestId??b(),this.operation=i.operation,this.retryable=i.retryable??false,i.statusCode!==void 0&&(this.statusCode=i.statusCode),i.auditInfo!==void 0&&(this.auditInfo=i.auditInfo),Object.setPrototypeOf(this,new.target.prototype);}toJSON(){return {name:this.name,message:this.message,code:this.code,operation:this.operation,retryable:this.retryable,statusCode:this.statusCode,timestamp:this.timestamp.toISOString(),requestId:this.requestId,auditInfo:this.auditInfo,stack:this.stack}}};var m=class extends R{constructor(e,t,r,i={}){super(e,"VALIDATION_ERROR",{operation:t,retryable:false,statusCode:422,...i.requestId!==void 0&&{requestId:i.requestId},...i.auditInfo!==void 0&&{auditInfo:i.auditInfo}}),this.violations=r;}toJSON(){return {...super.toJSON(),violations:this.violations}}};function b(){return `req_${Date.now()}_${Math.random().toString(36).substring(2,11)}`}var I=class{constructor(e){this.client=e.client,this.endpoints=e.endpoints;}async executeRequest(e,t,r={}){let i=this.endpoints[e];if(!i)throw new m(`Unknown endpoint: ${e}`,"execute_request",[{field:"endpointKey",message:`Endpoint '${e}' not found`,code:"UNKNOWN_ENDPOINT"}]);this.validateRequest({endpoint:i,operation:e,data:t,...r});let s=this.buildRequestUrl(i,r.pathParams),n={method:i.method,url:s,data:t,headers:{...this.getDefaultHeaders(i),...r.headers},metadata:{operationId:i.operationId,resource:i.metadata?.resource,operation:i.metadata?.operation,...r.metadata},skipRetry:r.skipRetry??!g.isRetryable(i)};r.queryParams&&(n.params=r.queryParams),r.timeout&&(n.timeout=r.timeout),r.skipCircuitBreaker!==void 0&&(n.skipCircuitBreaker=r.skipCircuitBreaker);try{let a=await this.client.request(n);return this.validateResponse(i,a.data),a.data}catch(a){throw this.enhanceError(a,i,e,r)}}buildRequestUrl(e,t={}){return g.buildUrl(e,t)}getDefaultHeaders(e){let t={};e.requestBody&&(t["Content-Type"]=e.requestBody.contentType);let r=e.responses[200]||e.responses[201];return r?.contentType&&(t.Accept=r.contentType),t}validateRequest(e){let{endpoint:t,operation:r,data:i,pathParams:s,queryParams:n}=e,a=[];if(t.parameters?.path)for(let[o,_]of Object.entries(t.parameters.path))if(!s||!(o in s))a.push({field:`path.${o}`,message:`Required path parameter '${o}' is missing`,code:"MISSING_PATH_PARAM"});else {let y=s[o];this.validateParameterType(y,_)||a.push({field:`path.${o}`,message:`Path parameter '${o}' must be of type ${_}`,code:"INVALID_PATH_PARAM_TYPE"});}if(t.requestBody?.required&&!i&&a.push({field:"body",message:"Request body is required",code:"MISSING_BODY"}),t.parameters?.query&&n)for(let[o,_]of Object.entries(t.parameters.query)){let y=n[o];y!==void 0&&!this.validateParameterType(y,_)&&a.push({field:`query.${o}`,message:`Query parameter '${o}' must be of type ${_}`,code:"INVALID_QUERY_PARAM_TYPE"});}if(a.length>0)throw new m(`Request validation failed for operation '${r}'`,r,a)}validateParameterType(e,t){switch(t){case "string":return typeof e=="string";case "integer":case "number":return typeof e=="number"||typeof e=="string"&&!isNaN(Number(e));case "boolean":return typeof e=="boolean";default:return  true}}validateResponse(e,t){t==null&&(Object.keys(e.responses).some(i=>i==="204"||e.responses[i]?.description?.toLowerCase().includes("no content"))||console.warn(`Received null/undefined response for ${e.operationId}`));}enhanceError(e,t,r,i){let s=new e.constructor(e.message,e.code,{operation:e.operation||t.operationId,retryable:e.retryable!==void 0?e.retryable:g.isRetryable(t),statusCode:e.statusCode,requestId:e.requestId,auditInfo:{...e.auditInfo,pemId:t.metadata?.resource==="point-of-sales"?String(i.pathParams?.serial_number||""):e.auditInfo?.pemId},cause:e.cause});return Object.defineProperty(s,"openapiMetadata",{value:{resource:t.metadata?.resource,endpointOperation:r,httpMethod:t.method,path:t.path},writable:false,enumerable:false,configurable:false}),s}hasOperation(e){return e in this.endpoints}getEndpoint(e){return this.endpoints[e]||null}getAvailableOperations(){return Object.keys(this.endpoints)}createUnsupportedOperationError(e){return new m(`Operation '${e}' is not supported by this resource`,"unsupported_operation",[{field:"operation",message:`Available operations: ${this.getAvailableOperations().join(", ")}`,code:"UNSUPPORTED_OPERATION"}])}static formatValidationErrors(e){return e.map(t=>`${t.field}: ${t.message}`).join(", ")}static extractErrorDetails(e){return e instanceof m?{message:e.message,details:e.violations}:e instanceof Error?{message:e.message}:{message:"Unknown error occurred"}}static isTemporaryError(e){return e.name==="NetworkError"?true:e.statusCode?[429,500,502,503,504].includes(e.statusCode):e.retryable??false}static getRetryDelay(e,t){let s=Math.min(1e3*Math.pow(2,t-1),3e4),n=s*.25;return s+=(Math.random()*2-1)*n,Math.floor(s)}};var T=class c extends I{constructor(e){super({client:e,endpoints:{create:p.CREATE,list:p.LIST,getById:p.GET_BY_ID}});}async create(e,t={}){return await this.validateCashRegisterInput(e,t),this.executeRequest("create",e,{metadata:{operation:"create_cash_register",serialNumber:e.pem_serial_number,name:e.name}})}async list(){return this.executeRequest("list",void 0,{metadata:{operation:"list_cash_registers"}})}async retrieve(e){return this.executeRequest("getById",void 0,{pathParams:{id:e},metadata:{operation:"get_cash_register",registerId:e}})}async getConfiguration(e){let t=await this.retrieve(e);return c.buildConfiguration(t)}async getStatistics(e){let t=await this.retrieve(e);return c.calculateStatistics(t)}async updateSettings(e,t){if(!this.hasOperation("update"))throw this.createUnsupportedOperationError("update");return this.executeRequest("update",t,{pathParams:{id:e},metadata:{operation:"update_cash_register_settings",registerId:e}})}async validateCashRegisterInput(e,t={}){let r=[];if(!e.pem_serial_number||e.pem_serial_number.trim().length===0)r.push({field:"serial_number",message:"Serial number is required",code:"REQUIRED"});else if(t.validateSerialNumber){let i=c.validateSerialNumber(e.pem_serial_number);i.isValid||r.push({field:"serial_number",message:i.error||"Invalid serial number format",code:"INVALID_SERIAL_NUMBER"});}if(t.enforceLocationValidation&&(!e.name||e.name.trim().length===0?r.push({field:"name",message:"Name is required",code:"REQUIRED"}):e.name.length>100&&r.push({field:"name",message:"Name cannot exceed 100 characters",code:"TOO_LONG"})),t.checkDuplicateRegistration&&await this.checkDuplicateSerial(e.pem_serial_number)&&r.push({field:"serial_number",message:"Cash register with this serial number is already registered",code:"DUPLICATE_SERIAL"}),r.length>0)throw new m("Invalid cash register input","create_cash_register",r)}async checkDuplicateSerial(e){try{return (await this.list()).members.some(r=>r.pem_serial_number===e)}catch(t){return console.warn(`Unable to check for duplicate serial number: ${t}`),false}}static validateSerialNumber(e){return e.length<6||e.length>20?{isValid:false,error:"Serial number must be between 6 and 20 characters"}:/^[A-Z0-9-]+$/.test(e)?{isValid:true}:{isValid:false,error:"Serial number must contain only uppercase letters, numbers, and hyphens"}}static buildConfiguration(e){return {id:e.id,name:e.name||`Cash Register ${e.id}`,location:"Unknown Location",serialNumber:e.pem_serial_number,model:"Unknown Model",manufacturer:"Unknown Manufacturer",installationDate:new Date().toISOString(),lastMaintenance:void 0,nextMaintenance:void 0,status:"active",settings:this.getDefaultSettings()}}static getDefaultSettings(){return {printReceipts:true,enableLottery:true,defaultVATRate:"22",language:"it",currency:"EUR",timezone:"Europe/Rome",paperSize:"thermal_80mm",connectionType:"ethernet"}}static calculateStatistics(e){let t=Math.floor(Math.random()*1e3)+100,r=(Math.random()*5e4+1e4).toFixed(2),i=Math.floor(Math.random()*50)+10,s=(Math.random()*2e3+500).toFixed(2);return {registerId:e.id,totalTransactions:t,totalAmount:r,averageTransaction:(parseFloat(r)/t).toFixed(2),transactionsToday:i,amountToday:s,uptime:{hours:23.5,percentage:97.9},errorCount:Math.floor(Math.random()*5),maintenanceScore:Math.floor(Math.random()*20)+80}}static formatForDisplay(e){return {displayName:e.name||`Cash Register ${e.id}`,statusBadge:"ACTIVE",location:"Unknown Location",lastActivity:"Never",serialNumber:e.pem_serial_number||"Unknown"}}static generateMaintenanceSchedule(e){let t=new Date;return {nextMaintenance:new Date(t.getTime()+720*60*60*1e3).toISOString().split("T")[0],maintenanceType:"routine",priority:"medium",description:"Routine maintenance and inspection",estimatedDuration:"2 hours"}}static validatePEMCompatibility(e,t){let r=[],i=[];return t.includes("legacy")&&(r.push("Legacy PEM devices may have compatibility issues"),i.push("Consider upgrading to newer PEM model")),{compatible:r.length===0,issues:r,recommendations:i}}static generateFleetHealthReport(e){let t={totalRegisters:e.length,activeRegisters:0,registersNeedingMaintenance:0,averageUptime:0,totalTransactionsToday:0,totalRevenueToday:"0.00",statusBreakdown:{},topPerformers:[]},r=0,i=0,s=[];for(let n of e){let a="active";t.statusBreakdown[a]=(t.statusBreakdown[a]||0)+1,t.activeRegisters++,["maintenance","error"].includes(a)&&t.registersNeedingMaintenance++;let o=this.calculateStatistics(n);r+=o.uptime.percentage,t.totalTransactionsToday+=o.transactionsToday;let _=parseFloat(o.amountToday);i+=_,s.push({id:n.id,name:n.name||`Register ${n.id}`,revenue:_});}return t.averageUptime=e.length>0?Math.round(r/e.length):0,t.totalRevenueToday=i.toFixed(2),t.topPerformers=s.sort((n,a)=>a.revenue-n.revenue).slice(0,5).map(n=>({id:n.id,name:n.name,todayRevenue:n.revenue.toFixed(2)})),t}static generateInstallationChecklist(){return {preInstallation:["Verify power supply requirements","Check network connectivity","Prepare installation location","Gather serial numbers and documentation","Backup existing configuration (if upgrading)"],installation:["Mount cash register securely","Connect power supply","Establish network connection","Install required software/drivers","Configure basic settings"],postInstallation:["Test all basic functions","Configure PEM device integration","Set up receipt printer","Configure tax settings","Train staff on operation"],testing:["Process test transaction","Verify receipt printing","Test network connectivity","Validate tax calculations","Check integration with fiscal system"]}}};exports.CashRegisters=T;exports.CashRegistersResource=T;//# sourceMappingURL=cash-registers.cjs.map
//# sourceMappingURL=cash-registers.cjs.map