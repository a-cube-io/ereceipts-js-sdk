var l=class{};l.LIST={path:"/mf1/cashiers",method:"GET",operationId:"read_cashiers_mf1_cashiers_get",summary:"Read Cashiers",description:"Get a paginated list of cashiers",tags:["Cashier"],security:[{"E-Receipt_IT_API_OAuth2PasswordBearer":[]}],parameters:{query:{page:"integer",size:"integer"}},responses:{200:{description:"Successful Response",contentType:"application/json",schema:"E-Receipt_IT_API_Page__T_Customized_CashierOutput_"},403:{description:"Forbidden",contentType:"application/json",schema:"E-Receipt_IT_API_ErrorModel403Forbidden"},404:{description:"Not Found",contentType:"application/json",schema:"E-Receipt_IT_API_ErrorModel404NotFound"},422:{description:"Validation Error",contentType:"application/json",schema:"E-Receipt_IT_API_HTTPValidationError"}},metadata:{resource:"cashiers",operation:"list",authRequired:true,retryable:true}},l.CREATE={path:"/mf1/cashiers",method:"POST",operationId:"create_cashier_mf1_cashiers_post",summary:"Create Cashier",description:"Create a new cashier account",tags:["Cashier"],security:[{"E-Receipt_IT_API_OAuth2PasswordBearer":[]}],requestBody:{required:true,contentType:"application/json",schema:"E-Receipt_IT_API_CashierCreateInput"},responses:{201:{description:"Successful Response",contentType:"application/json",schema:"E-Receipt_IT_API_CashierOutput"},403:{description:"Forbidden",contentType:"application/json",schema:"E-Receipt_IT_API_ErrorModel403Forbidden"},422:{description:"Validation Error",contentType:"application/json",schema:"E-Receipt_IT_API_HTTPValidationError"}},metadata:{resource:"cashiers",operation:"create",authRequired:true,retryable:false}},l.ME={path:"/mf1/cashiers/me",method:"GET",operationId:"read_cashier_me_mf1_cashiers_me_get",summary:"Read Cashier Me",description:"Read currently authenticated cashier's information",tags:["Cashier"],security:[{"E-Receipt_IT_API_OAuth2PasswordBearer":[]}],responses:{200:{description:"Successful Response",contentType:"application/json",schema:"E-Receipt_IT_API_CashierOutput"},403:{description:"Forbidden",contentType:"application/json",schema:"E-Receipt_IT_API_ErrorModel403Forbidden"},404:{description:"Not Found",contentType:"application/json",schema:"E-Receipt_IT_API_ErrorModel404NotFound"}},metadata:{resource:"cashiers",operation:"me",authRequired:true,retryable:true}},l.GET_BY_ID={path:"/mf1/cashiers/{cashier_id}",method:"GET",operationId:"read_cashier_by_id_mf1_cashiers__cashier_id__get",summary:"Read Cashier By Id",description:"Get a specific user by id",tags:["Cashier"],security:[{"E-Receipt_IT_API_OAuth2PasswordBearer":[]}],parameters:{path:{cashier_id:"integer"}},responses:{200:{description:"Successful Response",contentType:"application/json",schema:"E-Receipt_IT_API_CashierOutput"},403:{description:"Forbidden",contentType:"application/json",schema:"E-Receipt_IT_API_ErrorModel403Forbidden"},404:{description:"Not Found",contentType:"application/json",schema:"E-Receipt_IT_API_ErrorModel404NotFound"},422:{description:"Validation Error",contentType:"application/json",schema:"E-Receipt_IT_API_HTTPValidationError"}},metadata:{resource:"cashiers",operation:"get",authRequired:true,retryable:true}},l.DELETE={path:"/mf1/cashiers/{cashier_id}",method:"DELETE",operationId:"delete_cashier_mf1_cashiers__cashier_id__delete",summary:"Delete Cashier",description:"Delete a cashier",tags:["Cashier"],security:[{"E-Receipt_IT_API_OAuth2PasswordBearer":[]}],parameters:{path:{cashier_id:"integer"}},responses:{204:{description:"Successful Response"},403:{description:"Forbidden",contentType:"application/json",schema:"E-Receipt_IT_API_ErrorModel403Forbidden"},404:{description:"Not Found",contentType:"application/json",schema:"E-Receipt_IT_API_ErrorModel404NotFound"},422:{description:"Validation Error",contentType:"application/json",schema:"E-Receipt_IT_API_HTTPValidationError"}},metadata:{resource:"cashiers",operation:"delete",authRequired:true,retryable:false}};var d=class{};d.LIST={path:"/mf1/point-of-sales",method:"GET",operationId:"read_point_of_sales_mf1_point_of_sales_get",summary:"Read Point Of Sales",description:"Retrieve PEMs",tags:["Point of Sale"],security:[{"E-Receipt_IT_API_OAuth2PasswordBearer":[]}],responses:{200:{description:"Successful Response",contentType:"application/json",schema:"E-Receipt_IT_API_Page__T_Customized_PointOfSaleOutput_"},403:{description:"Forbidden",contentType:"application/json",schema:"E-Receipt_IT_API_ErrorModel403Forbidden"}},metadata:{resource:"point-of-sales",operation:"list",authRequired:true,retryable:true}},d.GET_BY_SERIAL={path:"/mf1/point-of-sales/{serial_number}",method:"GET",operationId:"read_point_of_sale_mf1_point_of_sales__serial_number__get",summary:"Read Point Of Sale",description:"Get a specific Point of Sale by serial number",tags:["Point of Sale"],security:[{"E-Receipt_IT_API_OAuth2PasswordBearer":[]}],parameters:{path:{serial_number:"string"}},responses:{200:{description:"Successful Response",contentType:"application/json",schema:"E-Receipt_IT_API_PointOfSaleOutput"},403:{description:"Forbidden",contentType:"application/json",schema:"E-Receipt_IT_API_ErrorModel403Forbidden"},404:{description:"Not Found",contentType:"application/json",schema:"E-Receipt_IT_API_ErrorModel404NotFound"}},metadata:{resource:"point-of-sales",operation:"get",authRequired:true,retryable:true}},d.CLOSE_JOURNAL={path:"/mf1/point-of-sales/close",method:"POST",operationId:"close_journal_mf1_point_of_sales_close_post",summary:"Close Journal",description:"Close the daily journal for Point of Sales",tags:["Point of Sale"],security:[{"E-Receipt_IT_API_OAuth2PasswordBearer":[]}],requestBody:{required:true,contentType:"application/json",schema:"E-Receipt_IT_API_CloseJournalRequest"},responses:{200:{description:"Successful Response",contentType:"application/json",schema:"E-Receipt_IT_API_CloseJournalOutput"},403:{description:"Forbidden",contentType:"application/json",schema:"E-Receipt_IT_API_ErrorModel403Forbidden"}},metadata:{resource:"point-of-sales",operation:"close_journal",authRequired:true,retryable:false}},d.ACTIVATION={path:"/mf1/point-of-sales/{serial_number}/activation",method:"POST",operationId:"post_activation_mf1_point_of_sales__serial_number__activation_post",summary:"Post Activation",description:"Trigger the activation process of a Point of Sale by requesting a certificate to the Italian Tax Agency",tags:["Point of Sale"],security:[{"E-Receipt_IT_API_OAuth2PasswordBearer":[]}],parameters:{path:{serial_number:"string"}},requestBody:{required:true,contentType:"application/json",schema:"E-Receipt_IT_API_ActivationRequest"},responses:{200:{description:"Successful Response",contentType:"application/json",schema:"E-Receipt_IT_API_ActivationOutput"},403:{description:"Forbidden",contentType:"application/json",schema:"E-Receipt_IT_API_ErrorModel403Forbidden"}},metadata:{resource:"point-of-sales",operation:"activation",authRequired:true,retryable:false}},d.CREATE_INACTIVITY={path:"/mf1/point-of-sales/{serial_number}/inactivity",method:"POST",operationId:"create_inactivity_period_mf1_point_of_sales__serial_number__inactivity_post",summary:"Create Inactivity Period",description:"Create a new inactivity period",tags:["Point of Sale"],security:[{"E-Receipt_IT_API_OAuth2PasswordBearer":[]}],parameters:{path:{serial_number:"string"}},requestBody:{required:true,contentType:"application/json",schema:"E-Receipt_IT_API_InactivityRequest"},responses:{200:{description:"Successful Response",contentType:"application/json"},403:{description:"Forbidden",contentType:"application/json",schema:"E-Receipt_IT_API_ErrorModel403Forbidden"}},metadata:{resource:"point-of-sales",operation:"create_inactivity",authRequired:true,retryable:false}},d.SET_OFFLINE={path:"/mf1/point-of-sales/{serial_number}/status/offline",method:"POST",operationId:"post_offline_mf1_point_of_sales__serial_number__status_offline_post",summary:"Post Offline",description:"Change the state of the Point of Sale to 'offline'",tags:["Point of Sale"],security:[{"E-Receipt_IT_API_OAuth2PasswordBearer":[]}],parameters:{path:{serial_number:"string"}},responses:{200:{description:"Successful Response",contentType:"application/json"},403:{description:"Forbidden",contentType:"application/json",schema:"E-Receipt_IT_API_ErrorModel403Forbidden"}},metadata:{resource:"point-of-sales",operation:"set_offline",authRequired:true,retryable:false}};var c=class{};c.LIST={path:"/mf1/receipts",method:"GET",operationId:"get_receipts_mf1_receipts_get",summary:"Get Receipts",description:"Get a list of electronic receipts",tags:["Receipt"],security:[{"E-Receipt_IT_API_OAuth2PasswordBearer":[]}],parameters:{query:{page:"integer",size:"integer",start_date:"string",end_date:"string",serial_number:"string"}},responses:{200:{description:"Successful Response",contentType:"application/json",schema:"E-Receipt_IT_API_Page__T_Customized_ReceiptOutput_"},403:{description:"Forbidden",contentType:"application/json",schema:"E-Receipt_IT_API_ErrorModel403Forbidden"}},metadata:{resource:"receipts",operation:"list",authRequired:true,retryable:true}},c.CREATE={path:"/mf1/receipts",method:"POST",operationId:"create_receipt_mf1_receipts_post",summary:"Create Receipt",description:"Create a new electronic receipt",tags:["Receipt"],security:[{"E-Receipt_IT_API_OAuth2PasswordBearer":[]}],requestBody:{required:true,contentType:"application/json",schema:"E-Receipt_IT_API_ReceiptInput"},responses:{201:{description:"Successful Response",contentType:"application/json",schema:"E-Receipt_IT_API_ReceiptOutput"},403:{description:"Forbidden",contentType:"application/json",schema:"E-Receipt_IT_API_ErrorModel403Forbidden"},422:{description:"Validation Error",contentType:"application/json",schema:"E-Receipt_IT_API_HTTPValidationError"}},metadata:{resource:"receipts",operation:"create",authRequired:true,retryable:false}},c.VOID={path:"/mf1/receipts",method:"DELETE",operationId:"void_receipt_mf1_receipts_delete",summary:"Void Receipt",description:"Void an electronic receipt",tags:["Receipt"],security:[{"E-Receipt_IT_API_OAuth2PasswordBearer":[]}],requestBody:{required:true,contentType:"application/json",schema:"E-Receipt_IT_API_VoidReceiptRequest"},responses:{200:{description:"Successful Response",contentType:"application/json",schema:"E-Receipt_IT_API_VoidReceiptOutput"},403:{description:"Forbidden",contentType:"application/json",schema:"E-Receipt_IT_API_ErrorModel403Forbidden"}},metadata:{resource:"receipts",operation:"void",authRequired:true,retryable:false}},c.GET_BY_UUID={path:"/mf1/receipts/{receipt_uuid}",method:"GET",operationId:"get_receipt_mf1_receipts__receipt_uuid__get",summary:"Get Receipt",description:"Get an electronic receipt",tags:["Receipt"],security:[{"E-Receipt_IT_API_OAuth2PasswordBearer":[]}],parameters:{path:{receipt_uuid:"string"}},responses:{200:{description:"Successful Response",contentType:"application/json",schema:"E-Receipt_IT_API_ReceiptOutput"},403:{description:"Forbidden",contentType:"application/json",schema:"E-Receipt_IT_API_ErrorModel403Forbidden"},404:{description:"Not Found",contentType:"application/json",schema:"E-Receipt_IT_API_ErrorModel404NotFound"}},metadata:{resource:"receipts",operation:"get",authRequired:true,retryable:true}},c.VOID_WITH_PROOF={path:"/mf1/receipts/void-with-proof",method:"DELETE",operationId:"void_receipt_via_proof_mf1_receipts_void_with_proof_delete",summary:"Void Receipt Via Proof",description:"Void an electronic receipt identified by a proof of purchase",tags:["Receipt"],security:[{"E-Receipt_IT_API_OAuth2PasswordBearer":[]}],requestBody:{required:true,contentType:"application/json",schema:"E-Receipt_IT_API_VoidReceiptWithProofRequest"},responses:{200:{description:"Successful Response",contentType:"application/json",schema:"E-Receipt_IT_API_VoidReceiptOutput"},403:{description:"Forbidden",contentType:"application/json",schema:"E-Receipt_IT_API_ErrorModel403Forbidden"}},metadata:{resource:"receipts",operation:"void_with_proof",authRequired:true,retryable:false}},c.GET_DETAILS={path:"/mf1/receipts/{receipt_uuid}/details",method:"GET",operationId:"get_receipt_details_mf1_receipts__receipt_uuid__details_get",summary:"Get Receipt Details",description:"Get the details or the PDF of an electronic receipt",tags:["Receipt"],security:[{"E-Receipt_IT_API_OAuth2PasswordBearer":[]}],parameters:{path:{receipt_uuid:"string"},header:{Accept:"string"}},responses:{200:{description:"Successful Response"},403:{description:"Forbidden",contentType:"application/json",schema:"E-Receipt_IT_API_ErrorModel403Forbidden"},404:{description:"Not Found",contentType:"application/json",schema:"E-Receipt_IT_API_ErrorModel404NotFound"}},metadata:{resource:"receipts",operation:"get_details",authRequired:true,retryable:true}},c.RETURN_ITEMS={path:"/mf1/receipts/return",method:"POST",operationId:"return_receipt_items_mf1_receipts_return_post",summary:"Return Receipt Items",description:"Return items from an electronic receipt (same PEM or other PEM)",tags:["Receipt"],security:[{"E-Receipt_IT_API_OAuth2PasswordBearer":[]}],requestBody:{required:true,contentType:"application/json",schema:"E-Receipt_IT_API_ReturnRequest"},responses:{200:{description:"Successful Response",contentType:"application/json",schema:"E-Receipt_IT_API_ReceiptOutput"},403:{description:"Forbidden",contentType:"application/json",schema:"E-Receipt_IT_API_ErrorModel403Forbidden"}},metadata:{resource:"receipts",operation:"return_items",authRequired:true,retryable:false}},c.RETURN_ITEMS_WITH_PROOF={path:"/mf1/receipts/return-with-proof",method:"POST",operationId:"return_receipt_items_via_proof_mf1_receipts_return_with_proof_post",summary:"Return Receipt Items Via Proof",description:"Return items from an electronic receipt identified by a proof of purchase",tags:["Receipt"],security:[{"E-Receipt_IT_API_OAuth2PasswordBearer":[]}],requestBody:{required:true,contentType:"application/json",schema:"E-Receipt_IT_API_ReturnWithProofRequest"},responses:{200:{description:"Successful Response",contentType:"application/json",schema:"E-Receipt_IT_API_ReceiptOutput"},403:{description:"Forbidden",contentType:"application/json",schema:"E-Receipt_IT_API_ErrorModel403Forbidden"}},metadata:{resource:"receipts",operation:"return_items_with_proof",authRequired:true,retryable:false}};var h=class{};h.CREATE={path:"/mf1/cash-register",method:"POST",operationId:"create_cash_register_mf1_cash_register_post",summary:"Create Cash Register",description:"Create a new cash register",tags:["Cash Register"],security:[{"E-Receipt_IT_API_OAuth2PasswordBearer":[]}],requestBody:{required:true,contentType:"application/json",schema:"E-Receipt_IT_API_CashRegisterInput"},responses:{201:{description:"Successful Response",contentType:"application/json",schema:"E-Receipt_IT_API_CashRegisterOutput"},403:{description:"Forbidden",contentType:"application/json",schema:"E-Receipt_IT_API_ErrorModel403Forbidden"},422:{description:"Validation Error",contentType:"application/json",schema:"E-Receipt_IT_API_HTTPValidationError"}},metadata:{resource:"cash-registers",operation:"create",authRequired:true,retryable:false}},h.LIST={path:"/mf1/cash-register",method:"GET",operationId:"get_cash_registers_mf1_cash_register_get",summary:"Get Cash Registers",description:"Get a list of cash registers",tags:["Cash Register"],security:[{"E-Receipt_IT_API_OAuth2PasswordBearer":[]}],responses:{200:{description:"Successful Response",contentType:"application/json",schema:"E-Receipt_IT_API_Page__T_Customized_CashRegisterOutput_"},403:{description:"Forbidden",contentType:"application/json",schema:"E-Receipt_IT_API_ErrorModel403Forbidden"}},metadata:{resource:"cash-registers",operation:"list",authRequired:true,retryable:true}},h.GET_BY_ID={path:"/mf1/cash-register/{id}",method:"GET",operationId:"get_cash_register_mf1_cash_register__id__get",summary:"Get Cash Register",description:"Get a specific cash register by ID",tags:["Cash Register"],security:[{"E-Receipt_IT_API_OAuth2PasswordBearer":[]}],parameters:{path:{id:"integer"}},responses:{200:{description:"Successful Response",contentType:"application/json",schema:"E-Receipt_IT_API_CashRegisterOutput"},403:{description:"Forbidden",contentType:"application/json",schema:"E-Receipt_IT_API_ErrorModel403Forbidden"},404:{description:"Not Found",contentType:"application/json",schema:"E-Receipt_IT_API_ErrorModel404NotFound"}},metadata:{resource:"cash-registers",operation:"get",authRequired:true,retryable:true}};var _=class{};_.LIST={path:"/merchants",method:"GET",operationId:"api_merchants_get_collection",summary:"Get Merchants",description:"Get a list of merchants",tags:["Merchant"],security:[{"E-Receipt_IT_API_OAuth2PasswordBearer":[]}],responses:{200:{description:"Successful Response",contentType:"application/json"},403:{description:"Forbidden",contentType:"application/json",schema:"E-Receipt_IT_API_ErrorModel403Forbidden"}},metadata:{resource:"merchants",operation:"list",authRequired:true,retryable:true}},_.CREATE={path:"/merchants",method:"POST",operationId:"api_merchants_post",summary:"Create Merchant",description:"Create a new merchant",tags:["Merchant"],security:[{"E-Receipt_IT_API_OAuth2PasswordBearer":[]}],requestBody:{required:true,contentType:"application/json",schema:"Merchant-create"},responses:{201:{description:"Successful Response",contentType:"application/json",schema:"Merchant-read"},403:{description:"Forbidden",contentType:"application/json",schema:"E-Receipt_IT_API_ErrorModel403Forbidden"},422:{description:"Validation Error",contentType:"application/json",schema:"E-Receipt_IT_API_HTTPValidationError"}},metadata:{resource:"merchants",operation:"create",authRequired:true,retryable:false}},_.GET_BY_UUID={path:"/merchants/{uuid}",method:"GET",operationId:"api_merchants_uuid_get",summary:"Get Merchant",description:"Get a specific merchant by UUID",tags:["Merchant"],security:[{"E-Receipt_IT_API_OAuth2PasswordBearer":[]}],parameters:{path:{uuid:"string"}},responses:{200:{description:"Successful Response",contentType:"application/json",schema:"Merchant-read"},403:{description:"Forbidden",contentType:"application/json",schema:"E-Receipt_IT_API_ErrorModel403Forbidden"},404:{description:"Not Found",contentType:"application/json",schema:"E-Receipt_IT_API_ErrorModel404NotFound"}},metadata:{resource:"merchants",operation:"get",authRequired:true,retryable:true}},_.UPDATE={path:"/merchants/{uuid}",method:"PUT",operationId:"api_merchants_uuid_put",summary:"Update Merchant",description:"Update a merchant",tags:["Merchant"],security:[{"E-Receipt_IT_API_OAuth2PasswordBearer":[]}],parameters:{path:{uuid:"string"}},requestBody:{required:true,contentType:"application/json",schema:"Merchant-update"},responses:{200:{description:"Successful Response",contentType:"application/json",schema:"Merchant-read"},403:{description:"Forbidden",contentType:"application/json",schema:"E-Receipt_IT_API_ErrorModel403Forbidden"},404:{description:"Not Found",contentType:"application/json",schema:"E-Receipt_IT_API_ErrorModel404NotFound"},422:{description:"Validation Error",contentType:"application/json",schema:"E-Receipt_IT_API_HTTPValidationError"}},metadata:{resource:"merchants",operation:"update",authRequired:true,retryable:false}};var I=class{};I.CREATE_POS={path:"/point-of-sales",method:"POST",operationId:"api_point-of-sales_post",summary:"Create Point of Sale",description:"Create a new Point of Sale",tags:["Pem"],security:[{"E-Receipt_IT_API_OAuth2PasswordBearer":[]}],requestBody:{required:true,contentType:"application/json",schema:"PointOfSale-create"},responses:{201:{description:"Successful Response",contentType:"application/json",schema:"PointOfSale-read"},403:{description:"Forbidden",contentType:"application/json",schema:"E-Receipt_IT_API_ErrorModel403Forbidden"},422:{description:"Validation Error",contentType:"application/json",schema:"E-Receipt_IT_API_HTTPValidationError"}},metadata:{resource:"pems",operation:"create_pos",authRequired:true,retryable:false}},I.GET_CERTIFICATES={path:"/point-of-sales/{id}/certificates",method:"GET",operationId:"api_point-of-sales_idcertificates_get",summary:"Get PEM Certificates",description:"Get certificates for a Point of Sale",tags:["Pem"],security:[{"E-Receipt_IT_API_OAuth2PasswordBearer":[]}],parameters:{path:{id:"string"}},responses:{200:{description:"Successful Response",contentType:"application/json"},403:{description:"Forbidden",contentType:"application/json",schema:"E-Receipt_IT_API_ErrorModel403Forbidden"},404:{description:"Not Found",contentType:"application/json",schema:"E-Receipt_IT_API_ErrorModel404NotFound"}},metadata:{resource:"pems",operation:"get_certificates",authRequired:true,retryable:true}};var y=class{static getResourceEndpoints(e){switch(e.toLowerCase()){case "cashiers":return Object.values(l);case "point-of-sales":return Object.values(d);case "receipts":return Object.values(c);case "cash-registers":return Object.values(h);case "merchants":return Object.values(_);case "pems":return Object.values(I);default:return []}}static findEndpointByOperationId(e){let t=[l,d,c,h,_,I];for(let r of t)for(let i of Object.values(r))if(i.operationId===e)return i;return null}static buildUrl(e,t={}){let r=e.path;for(let[i,n]of Object.entries(t))r=r.replace(`{${i}}`,String(n));return r}static requiresAuth(e){return e.metadata?.authRequired??false}static isRetryable(e){return e.metadata?.retryable??false}static getRequestContentType(e){return e.requestBody?.contentType??null}static getResponseContentType(e,t){return e.responses[t]?.contentType??null}};var b=class extends Error{constructor(t,r,i){super(t);this.code=r;i.cause&&(this.cause=i.cause),this.name=this.constructor.name,this.timestamp=new Date,this.requestId=i.requestId??v(),this.operation=i.operation,this.retryable=i.retryable??false,i.statusCode!==void 0&&(this.statusCode=i.statusCode),i.auditInfo!==void 0&&(this.auditInfo=i.auditInfo),Object.setPrototypeOf(this,new.target.prototype);}toJSON(){return {name:this.name,message:this.message,code:this.code,operation:this.operation,retryable:this.retryable,statusCode:this.statusCode,timestamp:this.timestamp.toISOString(),requestId:this.requestId,auditInfo:this.auditInfo,stack:this.stack}}};var m=class extends b{constructor(e,t,r,i={}){super(e,"VALIDATION_ERROR",{operation:t,retryable:false,statusCode:422,...i.requestId!==void 0&&{requestId:i.requestId},...i.auditInfo!==void 0&&{auditInfo:i.auditInfo}}),this.violations=r;}toJSON(){return {...super.toJSON(),violations:this.violations}}};function v(){return `req_${Date.now()}_${Math.random().toString(36).substring(2,11)}`}var g=class{constructor(e){this.client=e.client,this.endpoints=e.endpoints;}async executeRequest(e,t,r={}){let i=this.endpoints[e];if(!i)throw new m(`Unknown endpoint: ${e}`,"execute_request",[{field:"endpointKey",message:`Endpoint '${e}' not found`,code:"UNKNOWN_ENDPOINT"}]);this.validateRequest({endpoint:i,operation:e,data:t,...r});let n=this.buildRequestUrl(i,r.pathParams),s={method:i.method,url:n,data:t,headers:{...this.getDefaultHeaders(i),...r.headers},metadata:{operationId:i.operationId,resource:i.metadata?.resource,operation:i.metadata?.operation,...r.metadata},skipRetry:r.skipRetry??!y.isRetryable(i)};r.queryParams&&(s.params=r.queryParams),r.timeout&&(s.timeout=r.timeout),r.skipCircuitBreaker!==void 0&&(s.skipCircuitBreaker=r.skipCircuitBreaker);try{let a=await this.client.request(s);return this.validateResponse(i,a.data),a.data}catch(a){throw this.enhanceError(a,i,e,r)}}buildRequestUrl(e,t={}){return y.buildUrl(e,t)}getDefaultHeaders(e){let t={};e.requestBody&&(t["Content-Type"]=e.requestBody.contentType);let r=e.responses[200]||e.responses[201];return r?.contentType&&(t.Accept=r.contentType),t}validateRequest(e){let{endpoint:t,operation:r,data:i,pathParams:n,queryParams:s}=e,a=[];if(t.parameters?.path)for(let[o,u]of Object.entries(t.parameters.path))if(!n||!(o in n))a.push({field:`path.${o}`,message:`Required path parameter '${o}' is missing`,code:"MISSING_PATH_PARAM"});else {let f=n[o];this.validateParameterType(f,u)||a.push({field:`path.${o}`,message:`Path parameter '${o}' must be of type ${u}`,code:"INVALID_PATH_PARAM_TYPE"});}if(t.requestBody?.required&&!i&&a.push({field:"body",message:"Request body is required",code:"MISSING_BODY"}),t.parameters?.query&&s)for(let[o,u]of Object.entries(t.parameters.query)){let f=s[o];f!==void 0&&!this.validateParameterType(f,u)&&a.push({field:`query.${o}`,message:`Query parameter '${o}' must be of type ${u}`,code:"INVALID_QUERY_PARAM_TYPE"});}if(a.length>0)throw new m(`Request validation failed for operation '${r}'`,r,a)}validateParameterType(e,t){switch(t){case "string":return typeof e=="string";case "integer":case "number":return typeof e=="number"||typeof e=="string"&&!isNaN(Number(e));case "boolean":return typeof e=="boolean";default:return  true}}validateResponse(e,t){t==null&&(Object.keys(e.responses).some(i=>i==="204"||e.responses[i]?.description?.toLowerCase().includes("no content"))||console.warn(`Received null/undefined response for ${e.operationId}`));}enhanceError(e,t,r,i){let n=new e.constructor(e.message,e.code,{operation:e.operation||t.operationId,retryable:e.retryable!==void 0?e.retryable:y.isRetryable(t),statusCode:e.statusCode,requestId:e.requestId,auditInfo:{...e.auditInfo,pemId:t.metadata?.resource==="point-of-sales"?String(i.pathParams?.serial_number||""):e.auditInfo?.pemId},cause:e.cause});return Object.defineProperty(n,"openapiMetadata",{value:{resource:t.metadata?.resource,endpointOperation:r,httpMethod:t.method,path:t.path},writable:false,enumerable:false,configurable:false}),n}hasOperation(e){return e in this.endpoints}getEndpoint(e){return this.endpoints[e]||null}getAvailableOperations(){return Object.keys(this.endpoints)}createUnsupportedOperationError(e){return new m(`Operation '${e}' is not supported by this resource`,"unsupported_operation",[{field:"operation",message:`Available operations: ${this.getAvailableOperations().join(", ")}`,code:"UNSUPPORTED_OPERATION"}])}static formatValidationErrors(e){return e.map(t=>`${t.field}: ${t.message}`).join(", ")}static extractErrorDetails(e){return e instanceof m?{message:e.message,details:e.violations}:e instanceof Error?{message:e.message}:{message:"Unknown error occurred"}}static isTemporaryError(e){return e.name==="NetworkError"?true:e.statusCode?[429,500,502,503,504].includes(e.statusCode):e.retryable??false}static getRetryDelay(e,t){let n=Math.min(1e3*Math.pow(2,t-1),3e4),s=n*.25;return n+=(Math.random()*2-1)*s,Math.floor(n)}};var P=class extends g{constructor(e){super({client:e,endpoints:{list:c.LIST,create:c.CREATE,void:c.VOID,getByUuid:c.GET_BY_UUID,voidWithProof:c.VOID_WITH_PROOF,getDetails:c.GET_DETAILS,returnItems:c.RETURN_ITEMS,returnItemsWithProof:c.RETURN_ITEMS_WITH_PROOF}});}async list(e){return this.executeRequest("list",void 0,{...e&&{queryParams:e},metadata:{operation:"list_receipts",dateRange:e?.start_date&&e?.end_date?`${e.start_date} to ${e.end_date}`:void 0}})}async create(e,t={}){return await this.validateReceiptInput(e,t),this.executeRequest("create",e,{metadata:{operation:"create_receipt",itemCount:e.items.length,totalAmount:this.calculateTotalAmount(e).totalAmount}})}async void(e){return this.executeRequest("void",e,{metadata:{operation:"void_receipt"}})}async retrieve(e){return this.executeRequest("getByUuid",void 0,{pathParams:{receipt_uuid:e},metadata:{operation:"get_receipt",receiptId:e}})}async voidWithProof(e){return this.executeRequest("voidWithProof",e,{metadata:{operation:"void_receipt_with_proof"}})}async getDetails(e,t="json"){let r=t==="pdf"?"application/pdf":"application/json";return this.executeRequest("getDetails",void 0,{pathParams:{receipt_uuid:e},headers:{Accept:r},metadata:{operation:"get_receipt_details",receiptId:e,format:t}})}async returnItems(e){return this.executeRequest("returnItems",e,{metadata:{operation:"return_receipt_items"}})}async returnItemsWithProof(e){return this.executeRequest("returnItemsWithProof",e,{metadata:{operation:"return_receipt_items_with_proof"}})}async validateReceiptInput(e,t={}){let r=[];(!e.items||e.items.length===0)&&r.push({field:"items",message:"Receipt must contain at least one item",code:"NO_ITEMS"}),t.maxReceiptItems&&e.items.length>t.maxReceiptItems&&r.push({field:"items",message:`Receipt cannot contain more than ${t.maxReceiptItems} items`,code:"TOO_MANY_ITEMS"});for(let n=0;n<e.items.length;n++){let s=e.items[n];if(!s)continue;let a=this.validateReceiptItem(s,n,t);r.push(...a);}let i=this.validatePaymentAmounts(e);if(r.push(...i),t.checkTotalCalculations){let n=this.validateCalculations(e);r.push(...n);}if(t.enforceItalianFiscalRules){let n=this.validateItalianFiscalRules(e);r.push(...n);}if(r.length>0)throw new m("Invalid receipt input","create_receipt",r)}validateReceiptItem(e,t,r){let i=[],n=`items[${t}]`;if((!e.description||e.description.trim().length===0)&&i.push({field:`${n}.description`,message:"Item description is required",code:"REQUIRED"}),(!e.quantity||parseFloat(e.quantity)<=0)&&i.push({field:`${n}.quantity`,message:"Item quantity must be greater than 0",code:"INVALID_QUANTITY"}),(!e.unit_price||parseFloat(e.unit_price)<0)&&i.push({field:`${n}.unit_price`,message:"Item unit price cannot be negative",code:"INVALID_PRICE"}),r.validateVATRates&&e.vat_rate_code){let s=["0","4","5","10","22"];s.includes(e.vat_rate_code)||i.push({field:`${n}.vat_rate_code`,message:`Invalid VAT rate. Valid rates: ${s.join(", ")}`,code:"INVALID_VAT_RATE"});}return e.description&&e.description.length>200&&i.push({field:`${n}.description`,message:"Item description cannot exceed 200 characters",code:"DESCRIPTION_TOO_LONG"}),i}validatePaymentAmounts(e){let t=[],r=parseFloat(e.cash_payment_amount||"0"),i=parseFloat(e.electronic_payment_amount||"0"),n=parseFloat(e.ticket_restaurant_payment_amount||"0");return r<=0&&i<=0&&n<=0&&t.push({field:"payment",message:"At least one payment method must have a positive amount",code:"NO_PAYMENT"}),r<0&&t.push({field:"cash_payment_amount",message:"Cash payment amount cannot be negative",code:"NEGATIVE_AMOUNT"}),i<0&&t.push({field:"electronic_payment_amount",message:"Electronic payment amount cannot be negative",code:"NEGATIVE_AMOUNT"}),n<0&&t.push({field:"ticket_restaurant_payment_amount",message:"Ticket restaurant payment amount cannot be negative",code:"NEGATIVE_AMOUNT"}),t}validateCalculations(e){let t=[];try{let r=this.calculateTotalAmount(e),i=parseFloat(e.cash_payment_amount||"0")+parseFloat(e.electronic_payment_amount||"0")+parseFloat(e.ticket_restaurant_payment_amount||"0");Math.abs(i-parseFloat(r.totalAmount))>.01&&t.push({field:"payment_total",message:`Payment total (${i.toFixed(2)}) does not match calculated total (${r.totalAmount})`,code:"PAYMENT_MISMATCH"});}catch{t.push({field:"calculation",message:"Failed to validate receipt calculations",code:"CALCULATION_ERROR"});}return t}validateItalianFiscalRules(e){let t=[];return parseFloat(this.calculateTotalAmount(e).totalAmount)>3e3&&parseFloat(e.cash_payment_amount||"0")>1e3&&t.push({field:"cash_payment_amount",message:"Cash payments over \u20AC1000 require additional documentation for transactions above \u20AC3000",code:"HIGH_VALUE_CASH_LIMIT"}),e.customer_lottery_code&&!/^[A-Z0-9]{16}$/.test(e.customer_lottery_code)&&t.push({field:"customer_lottery_code",message:"Lottery code must be 16 alphanumeric characters",code:"INVALID_LOTTERY_CODE"}),t}calculateTotalAmount(e){let t=0,r=0,i=parseFloat(e.discount||"0"),n=new Map;for(let o of e.items){let u=parseFloat(o.quantity),f=parseFloat(o.unit_price),O=parseFloat(o.discount||"0"),q=parseFloat(o.vat_rate_code||"0")/100,R=u*f-O,T=R*q,C=R+T;t+=R,r+=T;let A=o.vat_rate_code||"0";n.has(A)||n.set(A,{net:0,vat:0,gross:0});let E=n.get(A);E.net+=R,E.vat+=T,E.gross+=C;}let s=t-i,a=s+r;return {subtotal:s.toFixed(2),vatAmount:r.toFixed(2),totalAmount:a.toFixed(2),discountAmount:(i+e.items.reduce((o,u)=>o+parseFloat(u.discount||"0"),0)).toFixed(2),itemCount:e.items.length,breakdown:Array.from(n.entries()).map(([o,u])=>({vatRate:o,netAmount:u.net.toFixed(2),vatAmount:u.vat.toFixed(2),grossAmount:u.gross.toFixed(2)}))}}static formatReceiptForDisplay(e){let t=new Date(e.created_at);return {receiptNumber:e.uuid.split("-")[0]?.toUpperCase()||"UNKNOWN",date:t.toLocaleDateString("it-IT"),time:t.toLocaleTimeString("it-IT"),formattedTotal:`\u20AC ${e.total_amount}`,paymentMethod:this.determinePaymentMethod(e),itemSummary:"0 items"}}static determinePaymentMethod(e){return "cash"}static generateReceiptSummary(e){let t={totalCount:e.length,totalAmount:"0.00",vatAmount:"0.00",averageAmount:"0.00",paymentMethodBreakdown:{cash:{count:0,amount:"0.00"},electronic:{count:0,amount:"0.00"},ticket_restaurant:{count:0,amount:"0.00"},mixed:{count:0,amount:"0.00"}},dateRange:{from:"",to:""}};if(e.length===0)return t;let r=0,i=0,n=e.map(s=>new Date(s.created_at)).sort((s,a)=>s.getTime()-a.getTime());for(let s of e){let a=parseFloat(s.total_amount);r+=a,i+=a*.15;let o=this.determinePaymentMethod(s);t.paymentMethodBreakdown[o].count++,t.paymentMethodBreakdown[o].amount=(parseFloat(t.paymentMethodBreakdown[o].amount)+a).toFixed(2);}return t.totalAmount=r.toFixed(2),t.vatAmount=i.toFixed(2),t.averageAmount=(r/e.length).toFixed(2),t.dateRange.from=n[0]?.toISOString().split("T")[0]||"",t.dateRange.to=n[n.length-1]?.toISOString().split("T")[0]||"",t}static validateReturnEligibility(e,t=new Date){let r=new Date(e.created_at),i=Math.floor((t.getTime()-r.getTime())/(1e3*60*60*24)),n=30;return i>n?{eligible:false,reason:`Return period expired. Returns allowed within ${n} days.`}:e.document_number&&e.document_number.includes("VOID")?{eligible:false,reason:"Receipt has already been voided"}:{eligible:true,daysRemaining:n-i}}static generateLotteryCode(){let e="ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789",t="";for(let r=0;r<16;r++)t+=e.charAt(Math.floor(Math.random()*e.length));return t}};export{P as Receipts,P as ReceiptsResource};//# sourceMappingURL=receipts.mjs.map
//# sourceMappingURL=receipts.mjs.map