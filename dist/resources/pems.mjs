var f=class{};f.LIST={path:"/mf1/cashiers",method:"GET",operationId:"read_cashiers_mf1_cashiers_get",summary:"Read Cashiers",description:"Get a paginated list of cashiers",tags:["Cashier"],security:[{"E-Receipt_IT_API_OAuth2PasswordBearer":[]}],parameters:{query:{page:"integer",size:"integer"}},responses:{200:{description:"Successful Response",contentType:"application/json",schema:"E-Receipt_IT_API_Page__T_Customized_CashierOutput_"},403:{description:"Forbidden",contentType:"application/json",schema:"E-Receipt_IT_API_ErrorModel403Forbidden"},404:{description:"Not Found",contentType:"application/json",schema:"E-Receipt_IT_API_ErrorModel404NotFound"},422:{description:"Validation Error",contentType:"application/json",schema:"E-Receipt_IT_API_HTTPValidationError"}},metadata:{resource:"cashiers",operation:"list",authRequired:true,retryable:true}},f.CREATE={path:"/mf1/cashiers",method:"POST",operationId:"create_cashier_mf1_cashiers_post",summary:"Create Cashier",description:"Create a new cashier account",tags:["Cashier"],security:[{"E-Receipt_IT_API_OAuth2PasswordBearer":[]}],requestBody:{required:true,contentType:"application/json",schema:"E-Receipt_IT_API_CashierCreateInput"},responses:{201:{description:"Successful Response",contentType:"application/json",schema:"E-Receipt_IT_API_CashierOutput"},403:{description:"Forbidden",contentType:"application/json",schema:"E-Receipt_IT_API_ErrorModel403Forbidden"},422:{description:"Validation Error",contentType:"application/json",schema:"E-Receipt_IT_API_HTTPValidationError"}},metadata:{resource:"cashiers",operation:"create",authRequired:true,retryable:false}},f.ME={path:"/mf1/cashiers/me",method:"GET",operationId:"read_cashier_me_mf1_cashiers_me_get",summary:"Read Cashier Me",description:"Read currently authenticated cashier's information",tags:["Cashier"],security:[{"E-Receipt_IT_API_OAuth2PasswordBearer":[]}],responses:{200:{description:"Successful Response",contentType:"application/json",schema:"E-Receipt_IT_API_CashierOutput"},403:{description:"Forbidden",contentType:"application/json",schema:"E-Receipt_IT_API_ErrorModel403Forbidden"},404:{description:"Not Found",contentType:"application/json",schema:"E-Receipt_IT_API_ErrorModel404NotFound"}},metadata:{resource:"cashiers",operation:"me",authRequired:true,retryable:true}},f.GET_BY_ID={path:"/mf1/cashiers/{cashier_id}",method:"GET",operationId:"read_cashier_by_id_mf1_cashiers__cashier_id__get",summary:"Read Cashier By Id",description:"Get a specific user by id",tags:["Cashier"],security:[{"E-Receipt_IT_API_OAuth2PasswordBearer":[]}],parameters:{path:{cashier_id:"integer"}},responses:{200:{description:"Successful Response",contentType:"application/json",schema:"E-Receipt_IT_API_CashierOutput"},403:{description:"Forbidden",contentType:"application/json",schema:"E-Receipt_IT_API_ErrorModel403Forbidden"},404:{description:"Not Found",contentType:"application/json",schema:"E-Receipt_IT_API_ErrorModel404NotFound"},422:{description:"Validation Error",contentType:"application/json",schema:"E-Receipt_IT_API_HTTPValidationError"}},metadata:{resource:"cashiers",operation:"get",authRequired:true,retryable:true}},f.DELETE={path:"/mf1/cashiers/{cashier_id}",method:"DELETE",operationId:"delete_cashier_mf1_cashiers__cashier_id__delete",summary:"Delete Cashier",description:"Delete a cashier",tags:["Cashier"],security:[{"E-Receipt_IT_API_OAuth2PasswordBearer":[]}],parameters:{path:{cashier_id:"integer"}},responses:{204:{description:"Successful Response"},403:{description:"Forbidden",contentType:"application/json",schema:"E-Receipt_IT_API_ErrorModel403Forbidden"},404:{description:"Not Found",contentType:"application/json",schema:"E-Receipt_IT_API_ErrorModel404NotFound"},422:{description:"Validation Error",contentType:"application/json",schema:"E-Receipt_IT_API_HTTPValidationError"}},metadata:{resource:"cashiers",operation:"delete",authRequired:true,retryable:false}};var u=class{};u.LIST={path:"/mf1/point-of-sales",method:"GET",operationId:"read_point_of_sales_mf1_point_of_sales_get",summary:"Read Point Of Sales",description:"Retrieve PEMs",tags:["Point of Sale"],security:[{"E-Receipt_IT_API_OAuth2PasswordBearer":[]}],responses:{200:{description:"Successful Response",contentType:"application/json",schema:"E-Receipt_IT_API_Page__T_Customized_PointOfSaleOutput_"},403:{description:"Forbidden",contentType:"application/json",schema:"E-Receipt_IT_API_ErrorModel403Forbidden"}},metadata:{resource:"point-of-sales",operation:"list",authRequired:true,retryable:true}},u.GET_BY_SERIAL={path:"/mf1/point-of-sales/{serial_number}",method:"GET",operationId:"read_point_of_sale_mf1_point_of_sales__serial_number__get",summary:"Read Point Of Sale",description:"Get a specific Point of Sale by serial number",tags:["Point of Sale"],security:[{"E-Receipt_IT_API_OAuth2PasswordBearer":[]}],parameters:{path:{serial_number:"string"}},responses:{200:{description:"Successful Response",contentType:"application/json",schema:"E-Receipt_IT_API_PointOfSaleOutput"},403:{description:"Forbidden",contentType:"application/json",schema:"E-Receipt_IT_API_ErrorModel403Forbidden"},404:{description:"Not Found",contentType:"application/json",schema:"E-Receipt_IT_API_ErrorModel404NotFound"}},metadata:{resource:"point-of-sales",operation:"get",authRequired:true,retryable:true}},u.CLOSE_JOURNAL={path:"/mf1/point-of-sales/close",method:"POST",operationId:"close_journal_mf1_point_of_sales_close_post",summary:"Close Journal",description:"Close the daily journal for Point of Sales",tags:["Point of Sale"],security:[{"E-Receipt_IT_API_OAuth2PasswordBearer":[]}],requestBody:{required:true,contentType:"application/json",schema:"E-Receipt_IT_API_CloseJournalRequest"},responses:{200:{description:"Successful Response",contentType:"application/json",schema:"E-Receipt_IT_API_CloseJournalOutput"},403:{description:"Forbidden",contentType:"application/json",schema:"E-Receipt_IT_API_ErrorModel403Forbidden"}},metadata:{resource:"point-of-sales",operation:"close_journal",authRequired:true,retryable:false}},u.ACTIVATION={path:"/mf1/point-of-sales/{serial_number}/activation",method:"POST",operationId:"post_activation_mf1_point_of_sales__serial_number__activation_post",summary:"Post Activation",description:"Trigger the activation process of a Point of Sale by requesting a certificate to the Italian Tax Agency",tags:["Point of Sale"],security:[{"E-Receipt_IT_API_OAuth2PasswordBearer":[]}],parameters:{path:{serial_number:"string"}},requestBody:{required:true,contentType:"application/json",schema:"E-Receipt_IT_API_ActivationRequest"},responses:{200:{description:"Successful Response",contentType:"application/json",schema:"E-Receipt_IT_API_ActivationOutput"},403:{description:"Forbidden",contentType:"application/json",schema:"E-Receipt_IT_API_ErrorModel403Forbidden"}},metadata:{resource:"point-of-sales",operation:"activation",authRequired:true,retryable:false}},u.CREATE_INACTIVITY={path:"/mf1/point-of-sales/{serial_number}/inactivity",method:"POST",operationId:"create_inactivity_period_mf1_point_of_sales__serial_number__inactivity_post",summary:"Create Inactivity Period",description:"Create a new inactivity period",tags:["Point of Sale"],security:[{"E-Receipt_IT_API_OAuth2PasswordBearer":[]}],parameters:{path:{serial_number:"string"}},requestBody:{required:true,contentType:"application/json",schema:"E-Receipt_IT_API_InactivityRequest"},responses:{200:{description:"Successful Response",contentType:"application/json"},403:{description:"Forbidden",contentType:"application/json",schema:"E-Receipt_IT_API_ErrorModel403Forbidden"}},metadata:{resource:"point-of-sales",operation:"create_inactivity",authRequired:true,retryable:false}},u.SET_OFFLINE={path:"/mf1/point-of-sales/{serial_number}/status/offline",method:"POST",operationId:"post_offline_mf1_point_of_sales__serial_number__status_offline_post",summary:"Post Offline",description:"Change the state of the Point of Sale to 'offline'",tags:["Point of Sale"],security:[{"E-Receipt_IT_API_OAuth2PasswordBearer":[]}],parameters:{path:{serial_number:"string"}},responses:{200:{description:"Successful Response",contentType:"application/json"},403:{description:"Forbidden",contentType:"application/json",schema:"E-Receipt_IT_API_ErrorModel403Forbidden"}},metadata:{resource:"point-of-sales",operation:"set_offline",authRequired:true,retryable:false}};var d=class{};d.LIST={path:"/mf1/receipts",method:"GET",operationId:"get_receipts_mf1_receipts_get",summary:"Get Receipts",description:"Get a list of electronic receipts",tags:["Receipt"],security:[{"E-Receipt_IT_API_OAuth2PasswordBearer":[]}],parameters:{query:{page:"integer",size:"integer",start_date:"string",end_date:"string",serial_number:"string"}},responses:{200:{description:"Successful Response",contentType:"application/json",schema:"E-Receipt_IT_API_Page__T_Customized_ReceiptOutput_"},403:{description:"Forbidden",contentType:"application/json",schema:"E-Receipt_IT_API_ErrorModel403Forbidden"}},metadata:{resource:"receipts",operation:"list",authRequired:true,retryable:true}},d.CREATE={path:"/mf1/receipts",method:"POST",operationId:"create_receipt_mf1_receipts_post",summary:"Create Receipt",description:"Create a new electronic receipt",tags:["Receipt"],security:[{"E-Receipt_IT_API_OAuth2PasswordBearer":[]}],requestBody:{required:true,contentType:"application/json",schema:"E-Receipt_IT_API_ReceiptInput"},responses:{201:{description:"Successful Response",contentType:"application/json",schema:"E-Receipt_IT_API_ReceiptOutput"},403:{description:"Forbidden",contentType:"application/json",schema:"E-Receipt_IT_API_ErrorModel403Forbidden"},422:{description:"Validation Error",contentType:"application/json",schema:"E-Receipt_IT_API_HTTPValidationError"}},metadata:{resource:"receipts",operation:"create",authRequired:true,retryable:false}},d.VOID={path:"/mf1/receipts",method:"DELETE",operationId:"void_receipt_mf1_receipts_delete",summary:"Void Receipt",description:"Void an electronic receipt",tags:["Receipt"],security:[{"E-Receipt_IT_API_OAuth2PasswordBearer":[]}],requestBody:{required:true,contentType:"application/json",schema:"E-Receipt_IT_API_VoidReceiptRequest"},responses:{200:{description:"Successful Response",contentType:"application/json",schema:"E-Receipt_IT_API_VoidReceiptOutput"},403:{description:"Forbidden",contentType:"application/json",schema:"E-Receipt_IT_API_ErrorModel403Forbidden"}},metadata:{resource:"receipts",operation:"void",authRequired:true,retryable:false}},d.GET_BY_UUID={path:"/mf1/receipts/{receipt_uuid}",method:"GET",operationId:"get_receipt_mf1_receipts__receipt_uuid__get",summary:"Get Receipt",description:"Get an electronic receipt",tags:["Receipt"],security:[{"E-Receipt_IT_API_OAuth2PasswordBearer":[]}],parameters:{path:{receipt_uuid:"string"}},responses:{200:{description:"Successful Response",contentType:"application/json",schema:"E-Receipt_IT_API_ReceiptOutput"},403:{description:"Forbidden",contentType:"application/json",schema:"E-Receipt_IT_API_ErrorModel403Forbidden"},404:{description:"Not Found",contentType:"application/json",schema:"E-Receipt_IT_API_ErrorModel404NotFound"}},metadata:{resource:"receipts",operation:"get",authRequired:true,retryable:true}},d.VOID_WITH_PROOF={path:"/mf1/receipts/void-with-proof",method:"DELETE",operationId:"void_receipt_via_proof_mf1_receipts_void_with_proof_delete",summary:"Void Receipt Via Proof",description:"Void an electronic receipt identified by a proof of purchase",tags:["Receipt"],security:[{"E-Receipt_IT_API_OAuth2PasswordBearer":[]}],requestBody:{required:true,contentType:"application/json",schema:"E-Receipt_IT_API_VoidReceiptWithProofRequest"},responses:{200:{description:"Successful Response",contentType:"application/json",schema:"E-Receipt_IT_API_VoidReceiptOutput"},403:{description:"Forbidden",contentType:"application/json",schema:"E-Receipt_IT_API_ErrorModel403Forbidden"}},metadata:{resource:"receipts",operation:"void_with_proof",authRequired:true,retryable:false}},d.GET_DETAILS={path:"/mf1/receipts/{receipt_uuid}/details",method:"GET",operationId:"get_receipt_details_mf1_receipts__receipt_uuid__details_get",summary:"Get Receipt Details",description:"Get the details or the PDF of an electronic receipt",tags:["Receipt"],security:[{"E-Receipt_IT_API_OAuth2PasswordBearer":[]}],parameters:{path:{receipt_uuid:"string"},header:{Accept:"string"}},responses:{200:{description:"Successful Response"},403:{description:"Forbidden",contentType:"application/json",schema:"E-Receipt_IT_API_ErrorModel403Forbidden"},404:{description:"Not Found",contentType:"application/json",schema:"E-Receipt_IT_API_ErrorModel404NotFound"}},metadata:{resource:"receipts",operation:"get_details",authRequired:true,retryable:true}},d.RETURN_ITEMS={path:"/mf1/receipts/return",method:"POST",operationId:"return_receipt_items_mf1_receipts_return_post",summary:"Return Receipt Items",description:"Return items from an electronic receipt (same PEM or other PEM)",tags:["Receipt"],security:[{"E-Receipt_IT_API_OAuth2PasswordBearer":[]}],requestBody:{required:true,contentType:"application/json",schema:"E-Receipt_IT_API_ReturnRequest"},responses:{200:{description:"Successful Response",contentType:"application/json",schema:"E-Receipt_IT_API_ReceiptOutput"},403:{description:"Forbidden",contentType:"application/json",schema:"E-Receipt_IT_API_ErrorModel403Forbidden"}},metadata:{resource:"receipts",operation:"return_items",authRequired:true,retryable:false}},d.RETURN_ITEMS_WITH_PROOF={path:"/mf1/receipts/return-with-proof",method:"POST",operationId:"return_receipt_items_via_proof_mf1_receipts_return_with_proof_post",summary:"Return Receipt Items Via Proof",description:"Return items from an electronic receipt identified by a proof of purchase",tags:["Receipt"],security:[{"E-Receipt_IT_API_OAuth2PasswordBearer":[]}],requestBody:{required:true,contentType:"application/json",schema:"E-Receipt_IT_API_ReturnWithProofRequest"},responses:{200:{description:"Successful Response",contentType:"application/json",schema:"E-Receipt_IT_API_ReceiptOutput"},403:{description:"Forbidden",contentType:"application/json",schema:"E-Receipt_IT_API_ErrorModel403Forbidden"}},metadata:{resource:"receipts",operation:"return_items_with_proof",authRequired:true,retryable:false}};var y=class{};y.CREATE={path:"/mf1/cash-register",method:"POST",operationId:"create_cash_register_mf1_cash_register_post",summary:"Create Cash Register",description:"Create a new cash register",tags:["Cash Register"],security:[{"E-Receipt_IT_API_OAuth2PasswordBearer":[]}],requestBody:{required:true,contentType:"application/json",schema:"E-Receipt_IT_API_CashRegisterInput"},responses:{201:{description:"Successful Response",contentType:"application/json",schema:"E-Receipt_IT_API_CashRegisterOutput"},403:{description:"Forbidden",contentType:"application/json",schema:"E-Receipt_IT_API_ErrorModel403Forbidden"},422:{description:"Validation Error",contentType:"application/json",schema:"E-Receipt_IT_API_HTTPValidationError"}},metadata:{resource:"cash-registers",operation:"create",authRequired:true,retryable:false}},y.LIST={path:"/mf1/cash-register",method:"GET",operationId:"get_cash_registers_mf1_cash_register_get",summary:"Get Cash Registers",description:"Get a list of cash registers",tags:["Cash Register"],security:[{"E-Receipt_IT_API_OAuth2PasswordBearer":[]}],responses:{200:{description:"Successful Response",contentType:"application/json",schema:"E-Receipt_IT_API_Page__T_Customized_CashRegisterOutput_"},403:{description:"Forbidden",contentType:"application/json",schema:"E-Receipt_IT_API_ErrorModel403Forbidden"}},metadata:{resource:"cash-registers",operation:"list",authRequired:true,retryable:true}},y.GET_BY_ID={path:"/mf1/cash-register/{id}",method:"GET",operationId:"get_cash_register_mf1_cash_register__id__get",summary:"Get Cash Register",description:"Get a specific cash register by ID",tags:["Cash Register"],security:[{"E-Receipt_IT_API_OAuth2PasswordBearer":[]}],parameters:{path:{id:"integer"}},responses:{200:{description:"Successful Response",contentType:"application/json",schema:"E-Receipt_IT_API_CashRegisterOutput"},403:{description:"Forbidden",contentType:"application/json",schema:"E-Receipt_IT_API_ErrorModel403Forbidden"},404:{description:"Not Found",contentType:"application/json",schema:"E-Receipt_IT_API_ErrorModel404NotFound"}},metadata:{resource:"cash-registers",operation:"get",authRequired:true,retryable:true}};var h=class{};h.LIST={path:"/merchants",method:"GET",operationId:"api_merchants_get_collection",summary:"Get Merchants",description:"Get a list of merchants",tags:["Merchant"],security:[{"E-Receipt_IT_API_OAuth2PasswordBearer":[]}],responses:{200:{description:"Successful Response",contentType:"application/json"},403:{description:"Forbidden",contentType:"application/json",schema:"E-Receipt_IT_API_ErrorModel403Forbidden"}},metadata:{resource:"merchants",operation:"list",authRequired:true,retryable:true}},h.CREATE={path:"/merchants",method:"POST",operationId:"api_merchants_post",summary:"Create Merchant",description:"Create a new merchant",tags:["Merchant"],security:[{"E-Receipt_IT_API_OAuth2PasswordBearer":[]}],requestBody:{required:true,contentType:"application/json",schema:"Merchant-create"},responses:{201:{description:"Successful Response",contentType:"application/json",schema:"Merchant-read"},403:{description:"Forbidden",contentType:"application/json",schema:"E-Receipt_IT_API_ErrorModel403Forbidden"},422:{description:"Validation Error",contentType:"application/json",schema:"E-Receipt_IT_API_HTTPValidationError"}},metadata:{resource:"merchants",operation:"create",authRequired:true,retryable:false}},h.GET_BY_UUID={path:"/merchants/{uuid}",method:"GET",operationId:"api_merchants_uuid_get",summary:"Get Merchant",description:"Get a specific merchant by UUID",tags:["Merchant"],security:[{"E-Receipt_IT_API_OAuth2PasswordBearer":[]}],parameters:{path:{uuid:"string"}},responses:{200:{description:"Successful Response",contentType:"application/json",schema:"Merchant-read"},403:{description:"Forbidden",contentType:"application/json",schema:"E-Receipt_IT_API_ErrorModel403Forbidden"},404:{description:"Not Found",contentType:"application/json",schema:"E-Receipt_IT_API_ErrorModel404NotFound"}},metadata:{resource:"merchants",operation:"get",authRequired:true,retryable:true}},h.UPDATE={path:"/merchants/{uuid}",method:"PUT",operationId:"api_merchants_uuid_put",summary:"Update Merchant",description:"Update a merchant",tags:["Merchant"],security:[{"E-Receipt_IT_API_OAuth2PasswordBearer":[]}],parameters:{path:{uuid:"string"}},requestBody:{required:true,contentType:"application/json",schema:"Merchant-update"},responses:{200:{description:"Successful Response",contentType:"application/json",schema:"Merchant-read"},403:{description:"Forbidden",contentType:"application/json",schema:"E-Receipt_IT_API_ErrorModel403Forbidden"},404:{description:"Not Found",contentType:"application/json",schema:"E-Receipt_IT_API_ErrorModel404NotFound"},422:{description:"Validation Error",contentType:"application/json",schema:"E-Receipt_IT_API_HTTPValidationError"}},metadata:{resource:"merchants",operation:"update",authRequired:true,retryable:false}};var _=class{};_.CREATE_POS={path:"/point-of-sales",method:"POST",operationId:"api_point-of-sales_post",summary:"Create Point of Sale",description:"Create a new Point of Sale",tags:["Pem"],security:[{"E-Receipt_IT_API_OAuth2PasswordBearer":[]}],requestBody:{required:true,contentType:"application/json",schema:"PointOfSale-create"},responses:{201:{description:"Successful Response",contentType:"application/json",schema:"PointOfSale-read"},403:{description:"Forbidden",contentType:"application/json",schema:"E-Receipt_IT_API_ErrorModel403Forbidden"},422:{description:"Validation Error",contentType:"application/json",schema:"E-Receipt_IT_API_HTTPValidationError"}},metadata:{resource:"pems",operation:"create_pos",authRequired:true,retryable:false}},_.GET_CERTIFICATES={path:"/point-of-sales/{id}/certificates",method:"GET",operationId:"api_point-of-sales_idcertificates_get",summary:"Get PEM Certificates",description:"Get certificates for a Point of Sale",tags:["Pem"],security:[{"E-Receipt_IT_API_OAuth2PasswordBearer":[]}],parameters:{path:{id:"string"}},responses:{200:{description:"Successful Response",contentType:"application/json"},403:{description:"Forbidden",contentType:"application/json",schema:"E-Receipt_IT_API_ErrorModel403Forbidden"},404:{description:"Not Found",contentType:"application/json",schema:"E-Receipt_IT_API_ErrorModel404NotFound"}},metadata:{resource:"pems",operation:"get_certificates",authRequired:true,retryable:true}};var g=class{static getResourceEndpoints(e){switch(e.toLowerCase()){case "cashiers":return Object.values(f);case "point-of-sales":return Object.values(u);case "receipts":return Object.values(d);case "cash-registers":return Object.values(y);case "merchants":return Object.values(h);case "pems":return Object.values(_);default:return []}}static findEndpointByOperationId(e){let t=[f,u,d,y,h,_];for(let r of t)for(let i of Object.values(r))if(i.operationId===e)return i;return null}static buildUrl(e,t={}){let r=e.path;for(let[i,n]of Object.entries(t))r=r.replace(`{${i}}`,String(n));return r}static requiresAuth(e){return e.metadata?.authRequired??false}static isRetryable(e){return e.metadata?.retryable??false}static getRequestContentType(e){return e.requestBody?.contentType??null}static getResponseContentType(e,t){return e.responses[t]?.contentType??null}};var I=class extends Error{constructor(t,r,i){super(t);this.code=r;i.cause&&(this.cause=i.cause),this.name=this.constructor.name,this.timestamp=new Date,this.requestId=i.requestId??b(),this.operation=i.operation,this.retryable=i.retryable??false,i.statusCode!==void 0&&(this.statusCode=i.statusCode),i.auditInfo!==void 0&&(this.auditInfo=i.auditInfo),Object.setPrototypeOf(this,new.target.prototype);}toJSON(){return {name:this.name,message:this.message,code:this.code,operation:this.operation,retryable:this.retryable,statusCode:this.statusCode,timestamp:this.timestamp.toISOString(),requestId:this.requestId,auditInfo:this.auditInfo,stack:this.stack}}};var m=class extends I{constructor(e,t,r,i={}){super(e,"VALIDATION_ERROR",{operation:t,retryable:false,statusCode:422,...i.requestId!==void 0&&{requestId:i.requestId},...i.auditInfo!==void 0&&{auditInfo:i.auditInfo}}),this.violations=r;}toJSON(){return {...super.toJSON(),violations:this.violations}}},T=class extends I{constructor(e,t,r={}){super(e,"FISCAL_ERROR",{operation:t,retryable:r.retryable??false,statusCode:r.statusCode??400,...r.requestId!==void 0&&{requestId:r.requestId},...r.auditInfo!==void 0&&{auditInfo:r.auditInfo}}),r.fiscalCode!==void 0&&(this.fiscalCode=r.fiscalCode),r.documentNumber!==void 0&&(this.documentNumber=r.documentNumber);}toJSON(){return {...super.toJSON(),fiscalCode:this.fiscalCode,documentNumber:this.documentNumber}}};function b(){return `req_${Date.now()}_${Math.random().toString(36).substring(2,11)}`}var R=class{constructor(e){this.client=e.client,this.endpoints=e.endpoints;}async executeRequest(e,t,r={}){let i=this.endpoints[e];if(!i)throw new m(`Unknown endpoint: ${e}`,"execute_request",[{field:"endpointKey",message:`Endpoint '${e}' not found`,code:"UNKNOWN_ENDPOINT"}]);this.validateRequest({endpoint:i,operation:e,data:t,...r});let n=this.buildRequestUrl(i,r.pathParams),a={method:i.method,url:n,data:t,headers:{...this.getDefaultHeaders(i),...r.headers},metadata:{operationId:i.operationId,resource:i.metadata?.resource,operation:i.metadata?.operation,...r.metadata},skipRetry:r.skipRetry??!g.isRetryable(i)};r.queryParams&&(a.params=r.queryParams),r.timeout&&(a.timeout=r.timeout),r.skipCircuitBreaker!==void 0&&(a.skipCircuitBreaker=r.skipCircuitBreaker);try{let s=await this.client.request(a);return this.validateResponse(i,s.data),s.data}catch(s){throw this.enhanceError(s,i,e,r)}}buildRequestUrl(e,t={}){return g.buildUrl(e,t)}getDefaultHeaders(e){let t={};e.requestBody&&(t["Content-Type"]=e.requestBody.contentType);let r=e.responses[200]||e.responses[201];return r?.contentType&&(t.Accept=r.contentType),t}validateRequest(e){let{endpoint:t,operation:r,data:i,pathParams:n,queryParams:a}=e,s=[];if(t.parameters?.path)for(let[o,p]of Object.entries(t.parameters.path))if(!n||!(o in n))s.push({field:`path.${o}`,message:`Required path parameter '${o}' is missing`,code:"MISSING_PATH_PARAM"});else {let l=n[o];this.validateParameterType(l,p)||s.push({field:`path.${o}`,message:`Path parameter '${o}' must be of type ${p}`,code:"INVALID_PATH_PARAM_TYPE"});}if(t.requestBody?.required&&!i&&s.push({field:"body",message:"Request body is required",code:"MISSING_BODY"}),t.parameters?.query&&a)for(let[o,p]of Object.entries(t.parameters.query)){let l=a[o];l!==void 0&&!this.validateParameterType(l,p)&&s.push({field:`query.${o}`,message:`Query parameter '${o}' must be of type ${p}`,code:"INVALID_QUERY_PARAM_TYPE"});}if(s.length>0)throw new m(`Request validation failed for operation '${r}'`,r,s)}validateParameterType(e,t){switch(t){case "string":return typeof e=="string";case "integer":case "number":return typeof e=="number"||typeof e=="string"&&!isNaN(Number(e));case "boolean":return typeof e=="boolean";default:return  true}}validateResponse(e,t){t==null&&(Object.keys(e.responses).some(i=>i==="204"||e.responses[i]?.description?.toLowerCase().includes("no content"))||console.warn(`Received null/undefined response for ${e.operationId}`));}enhanceError(e,t,r,i){let n=new e.constructor(e.message,e.code,{operation:e.operation||t.operationId,retryable:e.retryable!==void 0?e.retryable:g.isRetryable(t),statusCode:e.statusCode,requestId:e.requestId,auditInfo:{...e.auditInfo,pemId:t.metadata?.resource==="point-of-sales"?String(i.pathParams?.serial_number||""):e.auditInfo?.pemId},cause:e.cause});return Object.defineProperty(n,"openapiMetadata",{value:{resource:t.metadata?.resource,endpointOperation:r,httpMethod:t.method,path:t.path},writable:false,enumerable:false,configurable:false}),n}hasOperation(e){return e in this.endpoints}getEndpoint(e){return this.endpoints[e]||null}getAvailableOperations(){return Object.keys(this.endpoints)}createUnsupportedOperationError(e){return new m(`Operation '${e}' is not supported by this resource`,"unsupported_operation",[{field:"operation",message:`Available operations: ${this.getAvailableOperations().join(", ")}`,code:"UNSUPPORTED_OPERATION"}])}static formatValidationErrors(e){return e.map(t=>`${t.field}: ${t.message}`).join(", ")}static extractErrorDetails(e){return e instanceof m?{message:e.message,details:e.violations}:e instanceof Error?{message:e.message}:{message:"Unknown error occurred"}}static isTemporaryError(e){return e.name==="NetworkError"?true:e.statusCode?[429,500,502,503,504].includes(e.statusCode):e.retryable??false}static getRetryDelay(e,t){let n=Math.min(1e3*Math.pow(2,t-1),3e4),a=n*.25;return n+=(Math.random()*2-1)*a,Math.floor(n)}};var E=class c extends R{constructor(e){super({client:e,endpoints:{createPOS:_.CREATE_POS,getCertificates:_.GET_CERTIFICATES}});}async createPointOfSale(e,t={}){return await this.validatePointOfSaleInput(e,t),this.executeRequest("createPOS",e,{metadata:{operation:"create_point_of_sale",merchantUuid:e.merchant_uuid,addressProvided:!!e.address}})}async getCertificates(e){let t=await this.executeRequest("getCertificates",void 0,{pathParams:{id:e},metadata:{operation:"get_pem_certificates",posId:e}});return this.parseCertificateResponse(t)}async validateCertificateChain(e){let t=await this.getCertificates(e);return c.buildCertificateChain(t)}async getConfiguration(e){let t=await this.getCertificates(e);return c.buildPEMConfiguration(e,t)}async checkCompliance(e){let t=await this.getConfiguration(e);return c.assessCompliance(t)}async requestCertificateRenewal(e,t="device"){return {renewalId:`renewal_${Date.now()}`,estimatedCompletion:new Date(Date.now()+10080*60*1e3).toISOString()}}async validatePointOfSaleInput(e,t={}){let r=[];if((!e.merchant_uuid||e.merchant_uuid.trim().length===0)&&r.push({field:"merchant_uuid",message:"Merchant UUID is required",code:"REQUIRED"}),!e.address)r.push({field:"address",message:"Address is required for PEM registration",code:"REQUIRED"});else {let i=this.validateAddress(e.address);r.push(...i);}if(r.length>0)throw new m("Invalid Point of Sale input","create_point_of_sale",r)}validateAddress(e){let t=[];return e.street_address||t.push({field:"address.street_address",message:"Street address is required",code:"REQUIRED"}),e.city||t.push({field:"address.city",message:"City is required",code:"REQUIRED"}),(!e.zip_code||!/^\d{5}$/.test(e.zip_code))&&t.push({field:"address.zip_code",message:"Valid 5-digit ZIP code is required",code:"INVALID_FORMAT"}),(!e.province||e.province.length!==2)&&t.push({field:"address.province",message:"Valid 2-character province code is required",code:"INVALID_FORMAT"}),t}parseCertificateResponse(e){if(!e)return [];let t=[];return e.mtls_certificate&&t.push({id:"mtls_cert",type:"device",status:"valid",issuer:"Italian Tax Agency",subject:"PEM Device",validFrom:new Date().toISOString(),validTo:new Date(Date.now()+365*24*60*60*1e3).toISOString(),serialNumber:"MTLS001",fingerprint:e.mtls_certificate.substring(0,40),keyUsage:["digitalSignature","keyEncipherment"],issuedFor:"PEM Device"}),t}static buildCertificateChain(e){let t=e.find(a=>a.type==="root"),r=e.filter(a=>a.type==="intermediate"),i=e.find(a=>a.type==="device")||e[0];if(!t||!i)throw new T("Invalid certificate chain: missing root or leaf certificate","build_certificate_chain");let n=this.validateCertificateChain(e);return {root:t,intermediate:r,leaf:i,validationResults:n}}static validateCertificateChain(e){let t=[],r=new Date,i=e.filter(o=>new Date(o.validTo)<=r);i.length>0&&t.push(`${i.length} certificate(s) are expired`);let n=e.filter(o=>o.status==="revoked");n.length>0&&t.push(`${n.length} certificate(s) are revoked`);let a=e.some(o=>o.type==="root"),s=e.some(o=>o.type==="device");return a||t.push("Missing root certificate"),s||t.push("Missing device certificate"),{chainValid:a&&s&&t.length===0,rootTrusted:a,notExpired:i.length===0,revocationChecked:true,issues:t}}static buildPEMConfiguration(e,t){let r=t.find(n=>n.type==="device"),i=new Date;return {pemId:e,deviceSerialNumber:r?.serialNumber||"unknown",certificates:t,configuration:{fiscalMemorySize:"32MB",supportedOperations:["sale","return","void","daily_close"],maxDailyTransactions:1e3,complianceVersion:"2.1.0"},status:this.determinePEMStatus(t),lastAudit:new Date(i.getTime()-720*60*60*1e3).toISOString(),nextCertificateRenewal:this.calculateNextRenewal(t)}}static determinePEMStatus(e){let t=new Date,r=new Date(t.getTime()+720*60*60*1e3);return e.some(s=>new Date(s.validTo)<=t)?"maintenance":e.some(s=>new Date(s.validTo)<=r)?"certificate_renewal":e.some(s=>s.status==="revoked")?"compliance_check":"active"}static calculateNextRenewal(e){if(e.length===0)return new Date().toISOString();let t=e.map(i=>new Date(i.validTo)).sort((i,n)=>i.getTime()-n.getTime())[0];return t?new Date(t.getTime()-1440*60*60*1e3).toISOString():new Date().toISOString()}static assessCompliance(e){let t=[],r=[],i=100,n=e.certificates.filter(p=>new Date(p.validTo)<=new Date);n.length>0&&(i-=30,t.push(`${n.length} expired certificate(s)`),r.push("Renew expired certificates immediately"));let a=e.certificates.filter(p=>{let l=new Date(p.validTo),P=new Date(Date.now()+720*60*60*1e3);return l<=P&&l>new Date});if(a.length>0&&(i-=15,t.push(`${a.length} certificate(s) expiring within 30 days`),r.push("Schedule certificate renewal")),e.lastAudit){let p=new Date(e.lastAudit),l=new Date(Date.now()-4320*60*60*1e3);p<l&&(i-=20,t.push("Audit overdue (last audit more than 6 months ago)"),r.push("Schedule compliance audit"));}else i-=25,t.push("No audit history found"),r.push("Conduct initial compliance audit");let s="full";i<70?s="non_compliant":i<85?s="partial":t.length>0&&(s="under_review");let o=new Date;return {level:s,score:Math.max(0,i),issues:t,recommendations:r,lastCheck:o.toISOString(),nextCheck:new Date(o.getTime()+720*60*60*1e3).toISOString()}}static formatCertificateForDisplay(e){let t=new Date,r=new Date(e.validTo),i=Math.ceil((r.getTime()-t.getTime())/(1e3*60*60*24));return {displayName:`${e.type.toUpperCase()} Certificate`,statusBadge:e.status.toUpperCase(),validity:`${e.validFrom.split("T")[0]} to ${e.validTo.split("T")[0]}`,issuerShort:e.issuer.split(",")[0]||e.issuer,expiresIn:i>0?`${i} days`:"Expired"}}static generateCertificateSummary(e){let t=new Date,r=new Date(t.getTime()+720*60*60*1e3),i={totalCertificates:e.length,validCertificates:0,expiredCertificates:0,expiringSoon:0,revokedCertificates:0,typeBreakdown:{},nextExpiry:null},n=null;for(let a of e){let s=new Date(a.validTo);a.status==="revoked"?i.revokedCertificates++:s<=t?i.expiredCertificates++:s<=r?i.expiringSoon++:i.validCertificates++,i.typeBreakdown[a.type]=(i.typeBreakdown[a.type]||0)+1,(!n||s<n)&&(n=s);}return i.nextExpiry=n&&n.toISOString().split("T")[0]||null,i}static validateCertificateSignature(e,t){if(!t&&e.type!=="root")return {valid:false,error:"Cannot validate signature without issuer certificate"};let r=e.fingerprint&&e.fingerprint!=="unknown";return {valid:!!r,...r?{}:{error:"Invalid certificate signature"}}}static generateRenewalRequest(e){let t=new Date,r=new Date(e.validTo),i=Math.ceil((r.getTime()-t.getTime())/(1e3*60*60*24)),n="low";return i<=0?n="critical":i<=7?n="high":i<=30&&(n="medium"),{certificateId:e.id,currentExpiry:e.validTo,requestedValidityPeriod:365,justification:i<=30?"Certificate expiring soon":"Routine renewal",urgency:n}}};export{E as PEMs,E as PEMsResource};//# sourceMappingURL=pems.mjs.map
//# sourceMappingURL=pems.mjs.map