var a=class{};a.LIST={path:"/mf1/cashiers",method:"GET",operationId:"read_cashiers_mf1_cashiers_get",summary:"Read Cashiers",description:"Get a paginated list of cashiers",tags:["Cashier"],security:[{"E-Receipt_IT_API_OAuth2PasswordBearer":[]}],parameters:{query:{page:"integer",size:"integer"}},responses:{200:{description:"Successful Response",contentType:"application/json",schema:"E-Receipt_IT_API_Page__T_Customized_CashierOutput_"},403:{description:"Forbidden",contentType:"application/json",schema:"E-Receipt_IT_API_ErrorModel403Forbidden"},404:{description:"Not Found",contentType:"application/json",schema:"E-Receipt_IT_API_ErrorModel404NotFound"},422:{description:"Validation Error",contentType:"application/json",schema:"E-Receipt_IT_API_HTTPValidationError"}},metadata:{resource:"cashiers",operation:"list",authRequired:true,retryable:true}},a.CREATE={path:"/mf1/cashiers",method:"POST",operationId:"create_cashier_mf1_cashiers_post",summary:"Create Cashier",description:"Create a new cashier account",tags:["Cashier"],security:[{"E-Receipt_IT_API_OAuth2PasswordBearer":[]}],requestBody:{required:true,contentType:"application/json",schema:"E-Receipt_IT_API_CashierCreateInput"},responses:{201:{description:"Successful Response",contentType:"application/json",schema:"E-Receipt_IT_API_CashierOutput"},403:{description:"Forbidden",contentType:"application/json",schema:"E-Receipt_IT_API_ErrorModel403Forbidden"},422:{description:"Validation Error",contentType:"application/json",schema:"E-Receipt_IT_API_HTTPValidationError"}},metadata:{resource:"cashiers",operation:"create",authRequired:true,retryable:false}},a.ME={path:"/mf1/cashiers/me",method:"GET",operationId:"read_cashier_me_mf1_cashiers_me_get",summary:"Read Cashier Me",description:"Read currently authenticated cashier's information",tags:["Cashier"],security:[{"E-Receipt_IT_API_OAuth2PasswordBearer":[]}],responses:{200:{description:"Successful Response",contentType:"application/json",schema:"E-Receipt_IT_API_CashierOutput"},403:{description:"Forbidden",contentType:"application/json",schema:"E-Receipt_IT_API_ErrorModel403Forbidden"},404:{description:"Not Found",contentType:"application/json",schema:"E-Receipt_IT_API_ErrorModel404NotFound"}},metadata:{resource:"cashiers",operation:"me",authRequired:true,retryable:true}},a.GET_BY_ID={path:"/mf1/cashiers/{cashier_id}",method:"GET",operationId:"read_cashier_by_id_mf1_cashiers__cashier_id__get",summary:"Read Cashier By Id",description:"Get a specific user by id",tags:["Cashier"],security:[{"E-Receipt_IT_API_OAuth2PasswordBearer":[]}],parameters:{path:{cashier_id:"integer"}},responses:{200:{description:"Successful Response",contentType:"application/json",schema:"E-Receipt_IT_API_CashierOutput"},403:{description:"Forbidden",contentType:"application/json",schema:"E-Receipt_IT_API_ErrorModel403Forbidden"},404:{description:"Not Found",contentType:"application/json",schema:"E-Receipt_IT_API_ErrorModel404NotFound"},422:{description:"Validation Error",contentType:"application/json",schema:"E-Receipt_IT_API_HTTPValidationError"}},metadata:{resource:"cashiers",operation:"get",authRequired:true,retryable:true}},a.DELETE={path:"/mf1/cashiers/{cashier_id}",method:"DELETE",operationId:"delete_cashier_mf1_cashiers__cashier_id__delete",summary:"Delete Cashier",description:"Delete a cashier",tags:["Cashier"],security:[{"E-Receipt_IT_API_OAuth2PasswordBearer":[]}],parameters:{path:{cashier_id:"integer"}},responses:{204:{description:"Successful Response"},403:{description:"Forbidden",contentType:"application/json",schema:"E-Receipt_IT_API_ErrorModel403Forbidden"},404:{description:"Not Found",contentType:"application/json",schema:"E-Receipt_IT_API_ErrorModel404NotFound"},422:{description:"Validation Error",contentType:"application/json",schema:"E-Receipt_IT_API_HTTPValidationError"}},metadata:{resource:"cashiers",operation:"delete",authRequired:true,retryable:false}};var u=class{};u.LIST={path:"/mf1/point-of-sales",method:"GET",operationId:"read_point_of_sales_mf1_point_of_sales_get",summary:"Read Point Of Sales",description:"Retrieve PEMs",tags:["Point of Sale"],security:[{"E-Receipt_IT_API_OAuth2PasswordBearer":[]}],responses:{200:{description:"Successful Response",contentType:"application/json",schema:"E-Receipt_IT_API_Page__T_Customized_PointOfSaleOutput_"},403:{description:"Forbidden",contentType:"application/json",schema:"E-Receipt_IT_API_ErrorModel403Forbidden"}},metadata:{resource:"point-of-sales",operation:"list",authRequired:true,retryable:true}},u.GET_BY_SERIAL={path:"/mf1/point-of-sales/{serial_number}",method:"GET",operationId:"read_point_of_sale_mf1_point_of_sales__serial_number__get",summary:"Read Point Of Sale",description:"Get a specific Point of Sale by serial number",tags:["Point of Sale"],security:[{"E-Receipt_IT_API_OAuth2PasswordBearer":[]}],parameters:{path:{serial_number:"string"}},responses:{200:{description:"Successful Response",contentType:"application/json",schema:"E-Receipt_IT_API_PointOfSaleOutput"},403:{description:"Forbidden",contentType:"application/json",schema:"E-Receipt_IT_API_ErrorModel403Forbidden"},404:{description:"Not Found",contentType:"application/json",schema:"E-Receipt_IT_API_ErrorModel404NotFound"}},metadata:{resource:"point-of-sales",operation:"get",authRequired:true,retryable:true}},u.CLOSE_JOURNAL={path:"/mf1/point-of-sales/close",method:"POST",operationId:"close_journal_mf1_point_of_sales_close_post",summary:"Close Journal",description:"Close the daily journal for Point of Sales",tags:["Point of Sale"],security:[{"E-Receipt_IT_API_OAuth2PasswordBearer":[]}],requestBody:{required:true,contentType:"application/json",schema:"E-Receipt_IT_API_CloseJournalRequest"},responses:{200:{description:"Successful Response",contentType:"application/json",schema:"E-Receipt_IT_API_CloseJournalOutput"},403:{description:"Forbidden",contentType:"application/json",schema:"E-Receipt_IT_API_ErrorModel403Forbidden"}},metadata:{resource:"point-of-sales",operation:"close_journal",authRequired:true,retryable:false}},u.ACTIVATION={path:"/mf1/point-of-sales/{serial_number}/activation",method:"POST",operationId:"post_activation_mf1_point_of_sales__serial_number__activation_post",summary:"Post Activation",description:"Trigger the activation process of a Point of Sale by requesting a certificate to the Italian Tax Agency",tags:["Point of Sale"],security:[{"E-Receipt_IT_API_OAuth2PasswordBearer":[]}],parameters:{path:{serial_number:"string"}},requestBody:{required:true,contentType:"application/json",schema:"E-Receipt_IT_API_ActivationRequest"},responses:{200:{description:"Successful Response",contentType:"application/json",schema:"E-Receipt_IT_API_ActivationOutput"},403:{description:"Forbidden",contentType:"application/json",schema:"E-Receipt_IT_API_ErrorModel403Forbidden"}},metadata:{resource:"point-of-sales",operation:"activation",authRequired:true,retryable:false}},u.CREATE_INACTIVITY={path:"/mf1/point-of-sales/{serial_number}/inactivity",method:"POST",operationId:"create_inactivity_period_mf1_point_of_sales__serial_number__inactivity_post",summary:"Create Inactivity Period",description:"Create a new inactivity period",tags:["Point of Sale"],security:[{"E-Receipt_IT_API_OAuth2PasswordBearer":[]}],parameters:{path:{serial_number:"string"}},requestBody:{required:true,contentType:"application/json",schema:"E-Receipt_IT_API_InactivityRequest"},responses:{200:{description:"Successful Response",contentType:"application/json"},403:{description:"Forbidden",contentType:"application/json",schema:"E-Receipt_IT_API_ErrorModel403Forbidden"}},metadata:{resource:"point-of-sales",operation:"create_inactivity",authRequired:true,retryable:false}},u.SET_OFFLINE={path:"/mf1/point-of-sales/{serial_number}/status/offline",method:"POST",operationId:"post_offline_mf1_point_of_sales__serial_number__status_offline_post",summary:"Post Offline",description:"Change the state of the Point of Sale to 'offline'",tags:["Point of Sale"],security:[{"E-Receipt_IT_API_OAuth2PasswordBearer":[]}],parameters:{path:{serial_number:"string"}},responses:{200:{description:"Successful Response",contentType:"application/json"},403:{description:"Forbidden",contentType:"application/json",schema:"E-Receipt_IT_API_ErrorModel403Forbidden"}},metadata:{resource:"point-of-sales",operation:"set_offline",authRequired:true,retryable:false}};var p=class{};p.LIST={path:"/mf1/receipts",method:"GET",operationId:"get_receipts_mf1_receipts_get",summary:"Get Receipts",description:"Get a list of electronic receipts",tags:["Receipt"],security:[{"E-Receipt_IT_API_OAuth2PasswordBearer":[]}],parameters:{query:{page:"integer",size:"integer",start_date:"string",end_date:"string",serial_number:"string"}},responses:{200:{description:"Successful Response",contentType:"application/json",schema:"E-Receipt_IT_API_Page__T_Customized_ReceiptOutput_"},403:{description:"Forbidden",contentType:"application/json",schema:"E-Receipt_IT_API_ErrorModel403Forbidden"}},metadata:{resource:"receipts",operation:"list",authRequired:true,retryable:true}},p.CREATE={path:"/mf1/receipts",method:"POST",operationId:"create_receipt_mf1_receipts_post",summary:"Create Receipt",description:"Create a new electronic receipt",tags:["Receipt"],security:[{"E-Receipt_IT_API_OAuth2PasswordBearer":[]}],requestBody:{required:true,contentType:"application/json",schema:"E-Receipt_IT_API_ReceiptInput"},responses:{201:{description:"Successful Response",contentType:"application/json",schema:"E-Receipt_IT_API_ReceiptOutput"},403:{description:"Forbidden",contentType:"application/json",schema:"E-Receipt_IT_API_ErrorModel403Forbidden"},422:{description:"Validation Error",contentType:"application/json",schema:"E-Receipt_IT_API_HTTPValidationError"}},metadata:{resource:"receipts",operation:"create",authRequired:true,retryable:false}},p.VOID={path:"/mf1/receipts",method:"DELETE",operationId:"void_receipt_mf1_receipts_delete",summary:"Void Receipt",description:"Void an electronic receipt",tags:["Receipt"],security:[{"E-Receipt_IT_API_OAuth2PasswordBearer":[]}],requestBody:{required:true,contentType:"application/json",schema:"E-Receipt_IT_API_VoidReceiptRequest"},responses:{200:{description:"Successful Response",contentType:"application/json",schema:"E-Receipt_IT_API_VoidReceiptOutput"},403:{description:"Forbidden",contentType:"application/json",schema:"E-Receipt_IT_API_ErrorModel403Forbidden"}},metadata:{resource:"receipts",operation:"void",authRequired:true,retryable:false}},p.GET_BY_UUID={path:"/mf1/receipts/{receipt_uuid}",method:"GET",operationId:"get_receipt_mf1_receipts__receipt_uuid__get",summary:"Get Receipt",description:"Get an electronic receipt",tags:["Receipt"],security:[{"E-Receipt_IT_API_OAuth2PasswordBearer":[]}],parameters:{path:{receipt_uuid:"string"}},responses:{200:{description:"Successful Response",contentType:"application/json",schema:"E-Receipt_IT_API_ReceiptOutput"},403:{description:"Forbidden",contentType:"application/json",schema:"E-Receipt_IT_API_ErrorModel403Forbidden"},404:{description:"Not Found",contentType:"application/json",schema:"E-Receipt_IT_API_ErrorModel404NotFound"}},metadata:{resource:"receipts",operation:"get",authRequired:true,retryable:true}},p.VOID_WITH_PROOF={path:"/mf1/receipts/void-with-proof",method:"DELETE",operationId:"void_receipt_via_proof_mf1_receipts_void_with_proof_delete",summary:"Void Receipt Via Proof",description:"Void an electronic receipt identified by a proof of purchase",tags:["Receipt"],security:[{"E-Receipt_IT_API_OAuth2PasswordBearer":[]}],requestBody:{required:true,contentType:"application/json",schema:"E-Receipt_IT_API_VoidReceiptWithProofRequest"},responses:{200:{description:"Successful Response",contentType:"application/json",schema:"E-Receipt_IT_API_VoidReceiptOutput"},403:{description:"Forbidden",contentType:"application/json",schema:"E-Receipt_IT_API_ErrorModel403Forbidden"}},metadata:{resource:"receipts",operation:"void_with_proof",authRequired:true,retryable:false}},p.GET_DETAILS={path:"/mf1/receipts/{receipt_uuid}/details",method:"GET",operationId:"get_receipt_details_mf1_receipts__receipt_uuid__details_get",summary:"Get Receipt Details",description:"Get the details or the PDF of an electronic receipt",tags:["Receipt"],security:[{"E-Receipt_IT_API_OAuth2PasswordBearer":[]}],parameters:{path:{receipt_uuid:"string"},header:{Accept:"string"}},responses:{200:{description:"Successful Response"},403:{description:"Forbidden",contentType:"application/json",schema:"E-Receipt_IT_API_ErrorModel403Forbidden"},404:{description:"Not Found",contentType:"application/json",schema:"E-Receipt_IT_API_ErrorModel404NotFound"}},metadata:{resource:"receipts",operation:"get_details",authRequired:true,retryable:true}},p.RETURN_ITEMS={path:"/mf1/receipts/return",method:"POST",operationId:"return_receipt_items_mf1_receipts_return_post",summary:"Return Receipt Items",description:"Return items from an electronic receipt (same PEM or other PEM)",tags:["Receipt"],security:[{"E-Receipt_IT_API_OAuth2PasswordBearer":[]}],requestBody:{required:true,contentType:"application/json",schema:"E-Receipt_IT_API_ReturnRequest"},responses:{200:{description:"Successful Response",contentType:"application/json",schema:"E-Receipt_IT_API_ReceiptOutput"},403:{description:"Forbidden",contentType:"application/json",schema:"E-Receipt_IT_API_ErrorModel403Forbidden"}},metadata:{resource:"receipts",operation:"return_items",authRequired:true,retryable:false}},p.RETURN_ITEMS_WITH_PROOF={path:"/mf1/receipts/return-with-proof",method:"POST",operationId:"return_receipt_items_via_proof_mf1_receipts_return_with_proof_post",summary:"Return Receipt Items Via Proof",description:"Return items from an electronic receipt identified by a proof of purchase",tags:["Receipt"],security:[{"E-Receipt_IT_API_OAuth2PasswordBearer":[]}],requestBody:{required:true,contentType:"application/json",schema:"E-Receipt_IT_API_ReturnWithProofRequest"},responses:{200:{description:"Successful Response",contentType:"application/json",schema:"E-Receipt_IT_API_ReceiptOutput"},403:{description:"Forbidden",contentType:"application/json",schema:"E-Receipt_IT_API_ErrorModel403Forbidden"}},metadata:{resource:"receipts",operation:"return_items_with_proof",authRequired:true,retryable:false}};var m=class{};m.CREATE={path:"/mf1/cash-register",method:"POST",operationId:"create_cash_register_mf1_cash_register_post",summary:"Create Cash Register",description:"Create a new cash register",tags:["Cash Register"],security:[{"E-Receipt_IT_API_OAuth2PasswordBearer":[]}],requestBody:{required:true,contentType:"application/json",schema:"E-Receipt_IT_API_CashRegisterInput"},responses:{201:{description:"Successful Response",contentType:"application/json",schema:"E-Receipt_IT_API_CashRegisterOutput"},403:{description:"Forbidden",contentType:"application/json",schema:"E-Receipt_IT_API_ErrorModel403Forbidden"},422:{description:"Validation Error",contentType:"application/json",schema:"E-Receipt_IT_API_HTTPValidationError"}},metadata:{resource:"cash-registers",operation:"create",authRequired:true,retryable:false}},m.LIST={path:"/mf1/cash-register",method:"GET",operationId:"get_cash_registers_mf1_cash_register_get",summary:"Get Cash Registers",description:"Get a list of cash registers",tags:["Cash Register"],security:[{"E-Receipt_IT_API_OAuth2PasswordBearer":[]}],responses:{200:{description:"Successful Response",contentType:"application/json",schema:"E-Receipt_IT_API_Page__T_Customized_CashRegisterOutput_"},403:{description:"Forbidden",contentType:"application/json",schema:"E-Receipt_IT_API_ErrorModel403Forbidden"}},metadata:{resource:"cash-registers",operation:"list",authRequired:true,retryable:true}},m.GET_BY_ID={path:"/mf1/cash-register/{id}",method:"GET",operationId:"get_cash_register_mf1_cash_register__id__get",summary:"Get Cash Register",description:"Get a specific cash register by ID",tags:["Cash Register"],security:[{"E-Receipt_IT_API_OAuth2PasswordBearer":[]}],parameters:{path:{id:"integer"}},responses:{200:{description:"Successful Response",contentType:"application/json",schema:"E-Receipt_IT_API_CashRegisterOutput"},403:{description:"Forbidden",contentType:"application/json",schema:"E-Receipt_IT_API_ErrorModel403Forbidden"},404:{description:"Not Found",contentType:"application/json",schema:"E-Receipt_IT_API_ErrorModel404NotFound"}},metadata:{resource:"cash-registers",operation:"get",authRequired:true,retryable:true}};var _=class{};_.LIST={path:"/merchants",method:"GET",operationId:"api_merchants_get_collection",summary:"Get Merchants",description:"Get a list of merchants",tags:["Merchant"],security:[{"E-Receipt_IT_API_OAuth2PasswordBearer":[]}],responses:{200:{description:"Successful Response",contentType:"application/json"},403:{description:"Forbidden",contentType:"application/json",schema:"E-Receipt_IT_API_ErrorModel403Forbidden"}},metadata:{resource:"merchants",operation:"list",authRequired:true,retryable:true}},_.CREATE={path:"/merchants",method:"POST",operationId:"api_merchants_post",summary:"Create Merchant",description:"Create a new merchant",tags:["Merchant"],security:[{"E-Receipt_IT_API_OAuth2PasswordBearer":[]}],requestBody:{required:true,contentType:"application/json",schema:"Merchant-create"},responses:{201:{description:"Successful Response",contentType:"application/json",schema:"Merchant-read"},403:{description:"Forbidden",contentType:"application/json",schema:"E-Receipt_IT_API_ErrorModel403Forbidden"},422:{description:"Validation Error",contentType:"application/json",schema:"E-Receipt_IT_API_HTTPValidationError"}},metadata:{resource:"merchants",operation:"create",authRequired:true,retryable:false}},_.GET_BY_UUID={path:"/merchants/{uuid}",method:"GET",operationId:"api_merchants_uuid_get",summary:"Get Merchant",description:"Get a specific merchant by UUID",tags:["Merchant"],security:[{"E-Receipt_IT_API_OAuth2PasswordBearer":[]}],parameters:{path:{uuid:"string"}},responses:{200:{description:"Successful Response",contentType:"application/json",schema:"Merchant-read"},403:{description:"Forbidden",contentType:"application/json",schema:"E-Receipt_IT_API_ErrorModel403Forbidden"},404:{description:"Not Found",contentType:"application/json",schema:"E-Receipt_IT_API_ErrorModel404NotFound"}},metadata:{resource:"merchants",operation:"get",authRequired:true,retryable:true}},_.UPDATE={path:"/merchants/{uuid}",method:"PUT",operationId:"api_merchants_uuid_put",summary:"Update Merchant",description:"Update a merchant",tags:["Merchant"],security:[{"E-Receipt_IT_API_OAuth2PasswordBearer":[]}],parameters:{path:{uuid:"string"}},requestBody:{required:true,contentType:"application/json",schema:"Merchant-update"},responses:{200:{description:"Successful Response",contentType:"application/json",schema:"Merchant-read"},403:{description:"Forbidden",contentType:"application/json",schema:"E-Receipt_IT_API_ErrorModel403Forbidden"},404:{description:"Not Found",contentType:"application/json",schema:"E-Receipt_IT_API_ErrorModel404NotFound"},422:{description:"Validation Error",contentType:"application/json",schema:"E-Receipt_IT_API_HTTPValidationError"}},metadata:{resource:"merchants",operation:"update",authRequired:true,retryable:false}};var h=class{};h.CREATE_POS={path:"/point-of-sales",method:"POST",operationId:"api_point-of-sales_post",summary:"Create Point of Sale",description:"Create a new Point of Sale",tags:["Pem"],security:[{"E-Receipt_IT_API_OAuth2PasswordBearer":[]}],requestBody:{required:true,contentType:"application/json",schema:"PointOfSale-create"},responses:{201:{description:"Successful Response",contentType:"application/json",schema:"PointOfSale-read"},403:{description:"Forbidden",contentType:"application/json",schema:"E-Receipt_IT_API_ErrorModel403Forbidden"},422:{description:"Validation Error",contentType:"application/json",schema:"E-Receipt_IT_API_HTTPValidationError"}},metadata:{resource:"pems",operation:"create_pos",authRequired:true,retryable:false}},h.GET_CERTIFICATES={path:"/point-of-sales/{id}/certificates",method:"GET",operationId:"api_point-of-sales_idcertificates_get",summary:"Get PEM Certificates",description:"Get certificates for a Point of Sale",tags:["Pem"],security:[{"E-Receipt_IT_API_OAuth2PasswordBearer":[]}],parameters:{path:{id:"string"}},responses:{200:{description:"Successful Response",contentType:"application/json"},403:{description:"Forbidden",contentType:"application/json",schema:"E-Receipt_IT_API_ErrorModel403Forbidden"},404:{description:"Not Found",contentType:"application/json",schema:"E-Receipt_IT_API_ErrorModel404NotFound"}},metadata:{resource:"pems",operation:"get_certificates",authRequired:true,retryable:true}};var f=class{static getResourceEndpoints(e){switch(e.toLowerCase()){case "cashiers":return Object.values(a);case "point-of-sales":return Object.values(u);case "receipts":return Object.values(p);case "cash-registers":return Object.values(m);case "merchants":return Object.values(_);case "pems":return Object.values(h);default:return []}}static findEndpointByOperationId(e){let t=[a,u,p,m,_,h];for(let r of t)for(let i of Object.values(r))if(i.operationId===e)return i;return null}static buildUrl(e,t={}){let r=e.path;for(let[i,s]of Object.entries(t))r=r.replace(`{${i}}`,String(s));return r}static requiresAuth(e){return e.metadata?.authRequired??false}static isRetryable(e){return e.metadata?.retryable??false}static getRequestContentType(e){return e.requestBody?.contentType??null}static getResponseContentType(e,t){return e.responses[t]?.contentType??null}};var R=class extends Error{constructor(t,r,i){super(t);this.code=r;i.cause&&(this.cause=i.cause),this.name=this.constructor.name,this.timestamp=new Date,this.requestId=i.requestId??E(),this.operation=i.operation,this.retryable=i.retryable??false,i.statusCode!==void 0&&(this.statusCode=i.statusCode),i.auditInfo!==void 0&&(this.auditInfo=i.auditInfo),Object.setPrototypeOf(this,new.target.prototype);}toJSON(){return {name:this.name,message:this.message,code:this.code,operation:this.operation,retryable:this.retryable,statusCode:this.statusCode,timestamp:this.timestamp.toISOString(),requestId:this.requestId,auditInfo:this.auditInfo,stack:this.stack}}};var l=class extends R{constructor(e,t,r,i={}){super(e,"VALIDATION_ERROR",{operation:t,retryable:false,statusCode:422,...i.requestId!==void 0&&{requestId:i.requestId},...i.auditInfo!==void 0&&{auditInfo:i.auditInfo}}),this.violations=r;}toJSON(){return {...super.toJSON(),violations:this.violations}}};function E(){return `req_${Date.now()}_${Math.random().toString(36).substring(2,11)}`}var g=class{constructor(e){this.client=e.client,this.endpoints=e.endpoints;}async executeRequest(e,t,r={}){let i=this.endpoints[e];if(!i)throw new l(`Unknown endpoint: ${e}`,"execute_request",[{field:"endpointKey",message:`Endpoint '${e}' not found`,code:"UNKNOWN_ENDPOINT"}]);this.validateRequest({endpoint:i,operation:e,data:t,...r});let s=this.buildRequestUrl(i,r.pathParams),c={method:i.method,url:s,data:t,headers:{...this.getDefaultHeaders(i),...r.headers},metadata:{operationId:i.operationId,resource:i.metadata?.resource,operation:i.metadata?.operation,...r.metadata},skipRetry:r.skipRetry??!f.isRetryable(i)};r.queryParams&&(c.params=r.queryParams),r.timeout&&(c.timeout=r.timeout),r.skipCircuitBreaker!==void 0&&(c.skipCircuitBreaker=r.skipCircuitBreaker);try{let n=await this.client.request(c);return this.validateResponse(i,n.data),n.data}catch(n){throw this.enhanceError(n,i,e,r)}}buildRequestUrl(e,t={}){return f.buildUrl(e,t)}getDefaultHeaders(e){let t={};e.requestBody&&(t["Content-Type"]=e.requestBody.contentType);let r=e.responses[200]||e.responses[201];return r?.contentType&&(t.Accept=r.contentType),t}validateRequest(e){let{endpoint:t,operation:r,data:i,pathParams:s,queryParams:c}=e,n=[];if(t.parameters?.path)for(let[d,I]of Object.entries(t.parameters.path))if(!s||!(d in s))n.push({field:`path.${d}`,message:`Required path parameter '${d}' is missing`,code:"MISSING_PATH_PARAM"});else {let y=s[d];this.validateParameterType(y,I)||n.push({field:`path.${d}`,message:`Path parameter '${d}' must be of type ${I}`,code:"INVALID_PATH_PARAM_TYPE"});}if(t.requestBody?.required&&!i&&n.push({field:"body",message:"Request body is required",code:"MISSING_BODY"}),t.parameters?.query&&c)for(let[d,I]of Object.entries(t.parameters.query)){let y=c[d];y!==void 0&&!this.validateParameterType(y,I)&&n.push({field:`query.${d}`,message:`Query parameter '${d}' must be of type ${I}`,code:"INVALID_QUERY_PARAM_TYPE"});}if(n.length>0)throw new l(`Request validation failed for operation '${r}'`,r,n)}validateParameterType(e,t){switch(t){case "string":return typeof e=="string";case "integer":case "number":return typeof e=="number"||typeof e=="string"&&!isNaN(Number(e));case "boolean":return typeof e=="boolean";default:return  true}}validateResponse(e,t){t==null&&(Object.keys(e.responses).some(i=>i==="204"||e.responses[i]?.description?.toLowerCase().includes("no content"))||console.warn(`Received null/undefined response for ${e.operationId}`));}enhanceError(e,t,r,i){let s=new e.constructor(e.message,e.code,{operation:e.operation||t.operationId,retryable:e.retryable!==void 0?e.retryable:f.isRetryable(t),statusCode:e.statusCode,requestId:e.requestId,auditInfo:{...e.auditInfo,pemId:t.metadata?.resource==="point-of-sales"?String(i.pathParams?.serial_number||""):e.auditInfo?.pemId},cause:e.cause});return Object.defineProperty(s,"openapiMetadata",{value:{resource:t.metadata?.resource,endpointOperation:r,httpMethod:t.method,path:t.path},writable:false,enumerable:false,configurable:false}),s}hasOperation(e){return e in this.endpoints}getEndpoint(e){return this.endpoints[e]||null}getAvailableOperations(){return Object.keys(this.endpoints)}createUnsupportedOperationError(e){return new l(`Operation '${e}' is not supported by this resource`,"unsupported_operation",[{field:"operation",message:`Available operations: ${this.getAvailableOperations().join(", ")}`,code:"UNSUPPORTED_OPERATION"}])}static formatValidationErrors(e){return e.map(t=>`${t.field}: ${t.message}`).join(", ")}static extractErrorDetails(e){return e instanceof l?{message:e.message,details:e.violations}:e instanceof Error?{message:e.message}:{message:"Unknown error occurred"}}static isTemporaryError(e){return e.name==="NetworkError"?true:e.statusCode?[429,500,502,503,504].includes(e.statusCode):e.retryable??false}static getRetryDelay(e,t){let s=Math.min(1e3*Math.pow(2,t-1),3e4),c=s*.25;return s+=(Math.random()*2-1)*c,Math.floor(s)}};var T=class o extends g{constructor(e){super({client:e,endpoints:{list:a.LIST,create:a.CREATE,me:a.ME,getById:a.GET_BY_ID,delete:a.DELETE}});}async list(e){return this.executeRequest("list",void 0,{...e&&{queryParams:e},metadata:{operation:"list_cashiers"}})}async create(e,t={}){return await this.validateCashierInput(e,t),this.executeRequest("create",e,{metadata:{operation:"create_cashier",email:e.email}})}async me(){return this.executeRequest("me",void 0,{metadata:{operation:"get_current_cashier"}})}async retrieve(e){return this.executeRequest("getById",void 0,{pathParams:{cashier_id:e},metadata:{operation:"get_cashier",cashierId:e}})}async delete(e){return this.executeRequest("delete",void 0,{pathParams:{cashier_id:e},metadata:{operation:"delete_cashier",cashierId:e}})}async update(e,t){if(!this.hasOperation("update"))throw this.createUnsupportedOperationError("update");return this.executeRequest("update",t,{pathParams:{cashier_id:e},metadata:{operation:"update_cashier",cashierId:e}})}async validateCashierInput(e,t={}){let r=[];!e.email||!this.isValidEmail(e.email)?r.push({field:"email",message:"Invalid email format",code:"INVALID_EMAIL"}):(t.allowedEmailDomains&&t.allowedEmailDomains.length>0&&(o.isAllowedEmailDomain(e.email,t.allowedEmailDomains)||r.push({field:"email",message:`Email domain not allowed. Allowed domains: ${t.allowedEmailDomains.join(", ")}`,code:"DOMAIN_NOT_ALLOWED"})),t.checkEmailUniqueness&&await this.checkEmailExists(e.email)&&r.push({field:"email",message:"Email address is already in use",code:"EMAIL_EXISTS"}));let i=o.checkPasswordStrength(e.password);if(i.isValid||(t.enforceStrongPassword?r.push({field:"password",message:i.message||"Password does not meet security requirements",code:"WEAK_PASSWORD"}):console.warn(`Weak password detected for ${e.email}: ${i.suggestions.join(", ")}`)),r.length>0)throw new l("Invalid cashier input","create_cashier",r)}async checkEmailExists(e){return console.warn(`Email uniqueness check not implemented for: ${e}`),false}isValidEmail(e){return o.isValidEmail(e)}static isValidEmail(e){return /^[^\s@]+@[^\s@]+\.[^\s@]+$/.test(e)}static checkPasswordStrength(e){let t=[],r=0;e.length>=8&&r++,e.length>=12&&r++,e.length<8&&t.push("Use at least 8 characters"),/[a-z]/.test(e)?r++:t.push("Include lowercase letters"),/[A-Z]/.test(e)?r++:t.push("Include uppercase letters"),/\d/.test(e)?r++:t.push("Include numbers"),/[^a-zA-Z0-9]/.test(e)?r++:t.push("Include special characters"),/(.)\\1{2,}/.test(e)&&(r--,t.push("Avoid repeating characters")),["password","password123","12345678","qwerty","abc123","password1","123456789","welcome","admin","letmein"].some(n=>e.toLowerCase().includes(n.toLowerCase()))&&(r=0,t.push("Avoid common passwords")),/^[a-zA-Z]+$/.test(e)&&e.length<12&&(r--,t.push("Avoid using only dictionary words"));let s=r>=4&&e.length>=8;return {isValid:s,score:r,message:s?"Strong password":"Password too weak",suggestions:t}}static generateSecurePassword(e=12){let t="abcdefghijklmnopqrstuvwxyz",r="ABCDEFGHIJKLMNOPQRSTUVWXYZ",i="0123456789",s="!@#$%^&*()_+-=[]{}|;:,.<>?",c=t+r+i+s,n="";n+=t[Math.floor(Math.random()*t.length)],n+=r[Math.floor(Math.random()*r.length)],n+=i[Math.floor(Math.random()*i.length)],n+=s[Math.floor(Math.random()*s.length)];for(let d=n.length;d<e;d++)n+=c[Math.floor(Math.random()*c.length)];return n.split("").sort(()=>Math.random()-.5).join("")}static formatEmailForDisplay(e){let[t,r]=e.split("@");if(!t||!r)return e;if(t.length<=3)return `${t[0]}**@${r}`;let i=Math.min(3,Math.floor(t.length/2)),s="*".repeat(t.length-i);return `${t.substring(0,i)}${s}@${r}`}static getEmailDomain(e){let t=e.split("@");return t.length===2&&t[1]||null}static isAllowedEmailDomain(e,t){let r=this.getEmailDomain(e);return r?t.includes(r.toLowerCase()):false}static generateUsername(e){let[t]=e.split("@");return t?t.toLowerCase().replace(/[^a-z0-9]/g,"").substring(0,20):"user"}static checkCreationRateLimit(e){return console.warn(`Rate limit check not implemented for IP: ${e}`),true}static getCashierPermissions(){return ["create_receipt","view_receipts","void_receipt","return_items","view_daily_summary"]}static formatCashierForDisplay(e){return {displayName:e.email.split("@")[0]||"Unknown",maskedEmail:this.formatEmailForDisplay(e.email),status:"active",permissions:this.getCashierPermissions()}}static validateCashierSession(e){return console.warn(`Session validation not implemented for cashier: ${e}`),Promise.resolve(true)}};export{T as Cashiers,T as CashiersResource};//# sourceMappingURL=cashiers.mjs.map
//# sourceMappingURL=cashiers.mjs.map